<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WeiJie Blog</title>
  
  <subtitle>Learn, Record and Share.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://naturalwill.github.io/"/>
  <updated>2020-01-11T08:47:31.369Z</updated>
  <id>https://naturalwill.github.io/</id>
  
  <author>
    <name>起源|NaturalWill</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何下载 Chrome 独立安装包</title>
    <link href="https://naturalwill.github.io/2019/09/06/Get-standalone-installation-package-of-chrome/"/>
    <id>https://naturalwill.github.io/2019/09/06/Get-standalone-installation-package-of-chrome/</id>
    <published>2019-09-06T13:04:45.000Z</published>
    <updated>2020-01-11T08:47:31.369Z</updated>
    
    <content type="html"><![CDATA[<p>在地址栏上增加 <code>?standalone=1</code> 或 <code>&amp;standalone=1</code> ，假如原来的地址是：</p><pre><code>https://www.google.com/intl/zh-CN/chrome/</code></pre><p>修改后变成：</p><pre><code>https://www.google.com/intl/zh-CN/chrome/?standalone=1</code></pre><p>访问修改后的网址，点击下载，这时下载的就是独立安装包了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在地址栏上增加 &lt;code&gt;?standalone=1&lt;/code&gt; 或 &lt;code&gt;&amp;amp;standalone=1&lt;/code&gt; ，假如原来的地址是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://www.google.com/intl/zh-CN/chrome/
&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于 Windows 10 文件夹共享</title>
    <link href="https://naturalwill.github.io/2019/09/05/Folder-sharing-in-windows-10/"/>
    <id>https://naturalwill.github.io/2019/09/05/Folder-sharing-in-windows-10/</id>
    <published>2019-09-05T10:42:00.000Z</published>
    <updated>2020-01-11T08:47:31.364Z</updated>
    
    <content type="html"><![CDATA[<h2 id="启用-Guest-账户方式"><a href="#启用-Guest-账户方式" class="headerlink" title="启用 Guest 账户方式"></a>启用 Guest 账户方式</h2><ol><li><p>方法一：<br>右击 “开始” 按钮 -&gt; 计算机管理 -&gt;  系统工具 -&gt; 本地用户和组 -&gt; 用户 -&gt; 右击 “Guest” 用户 -&gt; 属性 -&gt; 取消勾选 “账户已禁用” 。</p></li><li><p>方法二：<br>右击 “开始” 按钮 -&gt; 运行 -&gt; 输入 <code>%windir%\system32\secpol.msc /s</code> ，打开本地安全策略 -&gt; 安全设置 -&gt; 本地策略 -&gt; 安全选项 -&gt; 在右侧列表找到“帐户: 来宾帐户状态” -&gt; 双击，选中里面的“已启用”，确定。</p></li></ol><a id="more"></a><h2 id="使用-Guest-账户访问共享内容"><a href="#使用-Guest-账户访问共享内容" class="headerlink" title="使用 Guest 账户访问共享内容"></a>使用 Guest 账户访问共享内容</h2><ol><li><p>启用 Guest 账户</p></li><li><p>允许 Guest 从网络访问<br>右击 “开始” 按钮 -&gt; 运行 -&gt; 输入 <code>%windir%\system32\secpol.msc /s</code> ，打开本地安全策略 -&gt; 安全设置 -&gt; 本地策略 -&gt; 用户权限分配 -&gt; 在右侧列表找到“拒绝从网络访问这台计算机” -&gt; 双击，选中里面的“Guest”，点击删除，确定。</p></li><li><p>设置网络登录进行身份验证方式<br>右击 “开始” 按钮 -&gt; 运行 -&gt; 输入 <code>%windir%\system32\secpol.msc /s</code> ，打开本地安全策略 -&gt; 安全设置 -&gt; 本地策略 -&gt; 安全选项 -&gt; 在右侧列表找到“网络访问: 本地帐户的共享和安全模型” -&gt; 双击，选中里面的“仅来宾”模型，确定。</p></li><li><p>开启共享时选中允许 Guest 访问即可</p></li><li><p>检查防火墙设置（可忽略，一般在进行上一步时会自动设置好）<br>右击 “开始” 按钮 -&gt; 运行 -&gt; 输入 <code>control</code> ，打开控制面板 -&gt; 系统和安全 -&gt; Windows Defender 防火墙 -&gt; 高级设置 -&gt; 在入站规则中检查“文件和打印机共享”是否被放行即可。</p></li></ol><h2 id="允许匿名用户访问共享内容"><a href="#允许匿名用户访问共享内容" class="headerlink" title="允许匿名用户访问共享内容"></a>允许匿名用户访问共享内容</h2><ol><li><p>开启 SMB 服务器和客户端<br>右击 “开始” 按钮 -&gt; 运行 -&gt; 输入 <code>control</code> ，打开控制面板 -&gt; 程序 -&gt; 程序和功能 -&gt; 启用或关闭 Windows 功能 -&gt; 开启 <code>SMB 1.0/CIFS 文件共享支持</code> ，确定。</p></li><li><p>启用 Guest 账户</p></li><li><p>启用 “无密码保护的共享”<br>在地址栏输入 <code>控制面板\网络和 Internet\网络和共享中心\高级共享设置</code> ，确定 -&gt; 所有网络 -&gt; 密码保护的共享 -&gt; 选中 “无密码保护的共享”，确定。</p></li></ol><h2 id="其他可能引起共享失败的原因"><a href="#其他可能引起共享失败的原因" class="headerlink" title="其他可能引起共享失败的原因"></a>其他可能引起共享失败的原因</h2><p><code>Function Discovery Resource Publication</code> 服务被禁用。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;启用-Guest-账户方式&quot;&gt;&lt;a href=&quot;#启用-Guest-账户方式&quot; class=&quot;headerlink&quot; title=&quot;启用 Guest 账户方式&quot;&gt;&lt;/a&gt;启用 Guest 账户方式&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;方法一：&lt;br&gt;右击 “开始” 按钮 -&amp;gt; 计算机管理 -&amp;gt;  系统工具 -&amp;gt; 本地用户和组 -&amp;gt; 用户 -&amp;gt; 右击 “Guest” 用户 -&amp;gt; 属性 -&amp;gt; 取消勾选 “账户已禁用” 。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;方法二：&lt;br&gt;右击 “开始” 按钮 -&amp;gt; 运行 -&amp;gt; 输入 &lt;code&gt;%windir%\system32\secpol.msc /s&lt;/code&gt; ，打开本地安全策略 -&amp;gt; 安全设置 -&amp;gt; 本地策略 -&amp;gt; 安全选项 -&amp;gt; 在右侧列表找到“帐户: 来宾帐户状态” -&amp;gt; 双击，选中里面的“已启用”，确定。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Windows 小技巧</title>
    <link href="https://naturalwill.github.io/2018/10/05/windows-skill/"/>
    <id>https://naturalwill.github.io/2018/10/05/windows-skill/</id>
    <published>2018-10-05T10:02:20.000Z</published>
    <updated>2020-01-11T08:47:31.352Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文件夹别名"><a href="#文件夹别名" class="headerlink" title="文件夹别名"></a>文件夹别名</h2><p>在使用 Windows 系统时，会发现部分英文路径中的目录显示的却是中文名（如：显示为“我的文档”真实的文件名为 Documents ）。如果我们想建立一个目录放文件，需要使用英文路径，但是为了美观，用中文别名，这又是怎么实现的呢？</p><p>在当前目录新建一文件 <code>desktop.ini</code> ，修改其内容如下：</p><pre><code>[.ShellClassInfo]LocalizedResourceName=显示名称</code></pre><p>由于系统缓存的关系，文件名未及时改变。用下面的方法让它立刻生效。</p><p>右击文件夹 -&gt; 属性 -&gt; 自定义 -&gt; 更改图标；随便选一个图标，然后点击确定。</p><p>这时会发现文件名已变成我们要设置的名称，我们刚刚创建的 <code>desktop.ini</code> ，会被设置为“受系统保护的文件”并隐藏起来。</p><p>重新打开 <code>desktop.ini</code> ，会发现里面多了一行用来描述图标的。</p><pre><code>[.ShellClassInfo]LocalizedResourceName=显示名称IconResource=C:\Windows\system32\SHELL32.dll,7</code></pre><p>如需恢复默认，可按如下操作恢复。</p><p>右击文件夹 -&gt; 属性 -&gt; 自定义 -&gt; 更改图标 -&gt; 还原默认值-&gt; 确定。</p><a id="more"></a><h2 id="Win10-截图快捷键"><a href="#Win10-截图快捷键" class="headerlink" title="Win10 截图快捷键"></a>Win10 截图快捷键</h2><ol><li>全屏截图（无反馈）<br> PrintScreen</li><li>截取活动窗口（无反馈）<br> Alt + PrintScreen</li><li>全屏截图并保存到”图片\屏幕截图”<br> Win + PrintScreen</li><li>截取自定义区域<br> Win + Shift + S</li><li>调出 Windows Ink 工作区，使用截图和草图<br> Win + W</li></ol><p>For <a href="https://zhuanlan.zhihu.com/p/33831541" rel="external nofollow noopener noreferrer" target="_blank">More</a>.</p><h2 id="激活-Windows-企业版"><a href="#激活-Windows-企业版" class="headerlink" title="激活 Windows 企业版"></a>激活 Windows 企业版</h2><pre><code># 设置 kms 服务器slmgr /skms your.kms.server# 执行激活命令slmgr /ato</code></pre><p>其他命令</p><pre><code># 检查系统版本及激活信息slmgr /dlv# 安装激活密钥slmgr /ipk XXXXX-XXXXX-XXXXX-XXXXX-XXXXX</code></pre><h2 id="激活-Office-VL-版"><a href="#激活-Office-VL-版" class="headerlink" title="激活 Office VL 版"></a>激活 Office VL 版</h2><blockquote><p>Office16 == Office 2016<br>Office15 == Office 2013<br>Office14 == Office 2010</p></blockquote><pre><code>cd &quot;C:\Program Files\Microsoft Office\Office16&quot;cscript ospp.vbs /sethst:your.kms.servercscript ospp.vbs /act</code></pre><p>如果是 64 位操作系统安装了 32 位的 Office ，第一条命令改为</p><pre><code>cd &quot;C:\Program Files (x86)\Microsoft Office\Office16&quot;</code></pre><p>其他命令</p><pre><code># 查看原密钥后五位cscript ospp.vbs /dstatus# 卸载原密钥，XXXXX代表后五位cscript ospp.vbs /unpkey:XXXXX# 安装新密钥cscript ospp.vbs /inpkey:XXXXX-XXXXX-XXXXX-XXXXX-XXXXX</code></pre><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><h3 id="CMD-注释"><a href="#CMD-注释" class="headerlink" title="CMD 注释"></a>CMD 注释</h3><p>CMD 注释形式如下：</p><ol><li><code>:: 注释内容</code>（第一个冒号后也可以跟任何一个非字母数字的字符）</li><li><code>REM 注释内容</code>（不能出现重定向符号和管道符号）</li><li><code>%注释内容%</code>（可以用作行间注释，不能出现重定向符号和管道符号）</li><li><code>:TAG 注释内容</code>（可以用作标签下方段的执行内容）</li></ol><h3 id="PowerShell-注释"><a href="#PowerShell-注释" class="headerlink" title="PowerShell 注释"></a>PowerShell 注释</h3><p>PowerShell 的注释符分为行注释符和块注释符。行注释符使用 “井号（<code>#</code>）”引起一行；块注释符使用“<code>&lt;#</code>”和“<code>#&gt;</code>”来引起一段注释。</p><p>行注释符，举例如下：</p><pre><code># 定义一个计数变量$i = 0</code></pre><p>块注释符、多行注释，举例如下：</p><pre><code>&lt;#    文件：xxx.ps1    用途：用于测试的xxx功能脚本#&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文件夹别名&quot;&gt;&lt;a href=&quot;#文件夹别名&quot; class=&quot;headerlink&quot; title=&quot;文件夹别名&quot;&gt;&lt;/a&gt;文件夹别名&lt;/h2&gt;&lt;p&gt;在使用 Windows 系统时，会发现部分英文路径中的目录显示的却是中文名（如：显示为“我的文档”真实的文件名为 Documents ）。如果我们想建立一个目录放文件，需要使用英文路径，但是为了美观，用中文别名，这又是怎么实现的呢？&lt;/p&gt;
&lt;p&gt;在当前目录新建一文件 &lt;code&gt;desktop.ini&lt;/code&gt; ，修改其内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[.ShellClassInfo]
LocalizedResourceName=显示名称
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由于系统缓存的关系，文件名未及时改变。用下面的方法让它立刻生效。&lt;/p&gt;
&lt;p&gt;右击文件夹 -&amp;gt; 属性 -&amp;gt; 自定义 -&amp;gt; 更改图标；随便选一个图标，然后点击确定。&lt;/p&gt;
&lt;p&gt;这时会发现文件名已变成我们要设置的名称，我们刚刚创建的 &lt;code&gt;desktop.ini&lt;/code&gt; ，会被设置为“受系统保护的文件”并隐藏起来。&lt;/p&gt;
&lt;p&gt;重新打开 &lt;code&gt;desktop.ini&lt;/code&gt; ，会发现里面多了一行用来描述图标的。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[.ShellClassInfo]
LocalizedResourceName=显示名称
IconResource=C:\Windows\system32\SHELL32.dll,7
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如需恢复默认，可按如下操作恢复。&lt;/p&gt;
&lt;p&gt;右击文件夹 -&amp;gt; 属性 -&amp;gt; 自定义 -&amp;gt; 更改图标 -&amp;gt; 还原默认值-&amp;gt; 确定。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java Http/Https 请求</title>
    <link href="https://naturalwill.github.io/2018/06/01/java-http-or-https-request/"/>
    <id>https://naturalwill.github.io/2018/06/01/java-http-or-https-request/</id>
    <published>2018-06-01T06:49:23.000Z</published>
    <updated>2020-01-11T08:47:31.300Z</updated>
    
    <content type="html"><![CDATA[<p>写好接口给 Java 的小伙伴调用，遇到使用Java发送http或者https请求的需求。和小伙伴在网上遛了一圈，找了很多代码都没能成功发送 Content-Type 为 “application/x-www-form-urlencoded” 的 POST 请求（ T_T 可能我们不熟悉 Java ）。最后，发现 <a href="https://blog.csdn.net/M1mory/article/details/76944668" rel="external nofollow noopener noreferrer" target="_blank">M1mory</a> 的能用。因此，稍作修改记录下来，方便以后使用。</p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStreamWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.net.Socket;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.CertificateException;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.X509Certificate;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.HostnameVerifier;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.HttpsURLConnection;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLContext;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLEngine;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.SSLSession;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.TrustManager;</span><br><span class="line"><span class="keyword">import</span> javax.net.ssl.X509ExtendedTrustManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpsUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> proxySet = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String proxyHost = <span class="string">"127.0.0.1"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> proxyPort = <span class="number">1080</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String url = <span class="string">"https://www.google.com"</span>;</span><br><span class="line">        String params = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">        String getResult = HttpsUtils.sendPost(url, params, proxySet);</span><br><span class="line">        System.out.println(getResult);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置请求头属性</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String, String&gt; <span class="title">setProperty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        HashMap&lt;String, String&gt; pMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="comment">// pMap.put("Accept-Encoding", "gzip"); //请求定义gzip,响应也是压缩包</span></span><br><span class="line">        pMap.put(<span class="string">"connection"</span>, <span class="string">"Keep-Alive"</span>);</span><br><span class="line">        pMap.put(<span class="string">"user-agent"</span>, <span class="string">"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)"</span>);</span><br><span class="line">        pMap.put(<span class="string">"Content-Type"</span>, <span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line">        <span class="keyword">return</span> pMap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * GET请求</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     *            请求的URL</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param</span></span><br><span class="line"><span class="comment">     *            请求参数，name1=value1&amp;name2=value2 的形式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 响应结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">sendGet</span><span class="params">(String url, String param, <span class="keyword">boolean</span> isproxy)</span> </span>&#123;</span><br><span class="line">        String result = <span class="string">""</span>;</span><br><span class="line">        BufferedReader in = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String urlNameString = url;</span><br><span class="line">            <span class="keyword">if</span> (param != <span class="keyword">null</span> &amp;&amp; !(<span class="string">""</span>.equals(param)))</span><br><span class="line">                urlNameString = url + <span class="string">"?"</span> + param;</span><br><span class="line">            URL realUrl = <span class="keyword">new</span> URL(urlNameString);</span><br><span class="line">            <span class="comment">// 打开和URL之间的连接</span></span><br><span class="line">            HttpURLConnection connection = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (isproxy) &#123;<span class="comment">// 使用代理模式</span></span><br><span class="line">                <span class="meta">@SuppressWarnings</span>(<span class="string">"static-access"</span>)</span><br><span class="line">                Proxy proxy = <span class="keyword">new</span> Proxy(Proxy.Type.DIRECT.HTTP, <span class="keyword">new</span> InetSocketAddress(proxyHost, proxyPort));</span><br><span class="line">                connection = (HttpURLConnection) realUrl.openConnection(proxy);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                connection = (HttpURLConnection) realUrl.openConnection();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// https 忽略证书验证</span></span><br><span class="line">            <span class="keyword">if</span> (url.substring(<span class="number">0</span>, <span class="number">5</span>).equals(<span class="string">"https"</span>)) &#123;</span><br><span class="line">                SSLContext ctx = MyX509TrustManagerUtils();</span><br><span class="line">                ((HttpsURLConnection) connection).setSSLSocketFactory(ctx.getSocketFactory());</span><br><span class="line">                ((HttpsURLConnection) connection).setHostnameVerifier(<span class="keyword">new</span> HostnameVerifier() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">verify</span><span class="params">(String arg0, SSLSession arg1)</span> </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置通用的请求属性</span></span><br><span class="line">            <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : setProperty().entrySet()) &#123;</span><br><span class="line">                connection.setRequestProperty(entry.getKey(), entry.getValue());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 建立连接</span></span><br><span class="line">            connection.connect();</span><br><span class="line">            <span class="comment">// 定义 BufferedReader输入流来读取URL的响应</span></span><br><span class="line">            <span class="keyword">if</span> (connection.getResponseCode() == HttpURLConnection.HTTP_OK</span><br><span class="line">                    || connection.getResponseCode() == HttpURLConnection.HTTP_CREATED</span><br><span class="line">                    || connection.getResponseCode() == HttpURLConnection.HTTP_ACCEPTED) &#123;</span><br><span class="line">                in = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(connection.getInputStream(), <span class="string">"UTF-8"</span>));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                in = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(connection.getErrorStream(), <span class="string">"UTF-8"</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            String line;</span><br><span class="line">            <span class="keyword">while</span> ((line = in.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                result += line;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"发送GET请求出现异常！"</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 使用finally块来关闭输入流</span></span><br><span class="line">        <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (in != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    in.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e2) &#123;</span><br><span class="line">                e2.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * POST请求</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     *            发送请求的 URL</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> param</span></span><br><span class="line"><span class="comment">     *            请求参数 name1=value1&amp;name2=value2 的形式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> isproxy</span></span><br><span class="line"><span class="comment">     *            是否使用代理模式</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 响应结果</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">sendPost</span><span class="params">(String url, String param, <span class="keyword">boolean</span> isproxy)</span> </span>&#123;</span><br><span class="line">        OutputStreamWriter out = <span class="keyword">null</span>;</span><br><span class="line">        BufferedReader in = <span class="keyword">null</span>;</span><br><span class="line">        String result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            URL realUrl = <span class="keyword">new</span> URL(url);</span><br><span class="line">            HttpURLConnection conn = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (isproxy) &#123;<span class="comment">// 使用代理模式</span></span><br><span class="line">                <span class="meta">@SuppressWarnings</span>(<span class="string">"static-access"</span>)</span><br><span class="line">                Proxy proxy = <span class="keyword">new</span> Proxy(Proxy.Type.DIRECT.HTTP, <span class="keyword">new</span> InetSocketAddress(proxyHost, proxyPort));</span><br><span class="line">                conn = (HttpURLConnection) realUrl.openConnection(proxy);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                conn = (HttpURLConnection) realUrl.openConnection();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// https</span></span><br><span class="line">            <span class="keyword">if</span> (url.substring(<span class="number">0</span>, <span class="number">5</span>).equals(<span class="string">"https"</span>)) &#123;</span><br><span class="line">                SSLContext ctx = MyX509TrustManagerUtils();</span><br><span class="line">                ((HttpsURLConnection) conn).setSSLSocketFactory(ctx.getSocketFactory());</span><br><span class="line">                ((HttpsURLConnection) conn).setHostnameVerifier(<span class="keyword">new</span> HostnameVerifier() &#123;</span><br><span class="line">                    <span class="comment">//在握手期间，如果 URL 的主机名和服务器的标识主机名不匹配，则验证机制可以回调此接口的实现程序来确定是否应该允许此连接。</span></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">verify</span><span class="params">(String arg0, SSLSession arg1)</span> </span>&#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 发送POST请求必须设置如下两行</span></span><br><span class="line">            conn.setDoOutput(<span class="keyword">true</span>);</span><br><span class="line">            conn.setDoInput(<span class="keyword">true</span>);</span><br><span class="line">            conn.setRequestMethod(<span class="string">"POST"</span>); <span class="comment">// POST方法</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置通用的请求属性</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : setProperty().entrySet()) &#123;</span><br><span class="line">                conn.setRequestProperty(entry.getKey(), entry.getValue());</span><br><span class="line">            &#125;</span><br><span class="line">            conn.connect();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取URLConnection对象对应的输出流</span></span><br><span class="line">            out = <span class="keyword">new</span> OutputStreamWriter(conn.getOutputStream(), <span class="string">"UTF-8"</span>);</span><br><span class="line">            <span class="comment">// 发送请求参数</span></span><br><span class="line">            out.write(param);</span><br><span class="line">            <span class="comment">// flush输出流的缓冲</span></span><br><span class="line">            out.flush();</span><br><span class="line">            <span class="comment">// 定义BufferedReader输入流来读取URL的响应</span></span><br><span class="line">            <span class="keyword">if</span> (conn.getResponseCode() == HttpURLConnection.HTTP_OK</span><br><span class="line">                    || conn.getResponseCode() == HttpURLConnection.HTTP_CREATED</span><br><span class="line">                    || conn.getResponseCode() == HttpURLConnection.HTTP_ACCEPTED) &#123;</span><br><span class="line">                in = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(conn.getInputStream(), <span class="string">"UTF-8"</span>));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                in = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(conn.getErrorStream(), <span class="string">"UTF-8"</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            String line;</span><br><span class="line">            <span class="keyword">while</span> ((line = in.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                result += line;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"发送 POST 请求出现异常！"</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 使用finally块来关闭输出流、输入流</span></span><br><span class="line">        <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (out != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    out.close();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (in != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    in.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line">                ex.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ===========================utils===================</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * url编码</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> source</span></span><br><span class="line"><span class="comment">     *            待编码字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> encode</span></span><br><span class="line"><span class="comment">     *            字符编码 eg:UTF-8</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 编码字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">urlEncode</span><span class="params">(String source, String encode)</span> </span>&#123;</span><br><span class="line">        String result = source;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = java.net.URLEncoder.encode(source, encode);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"0"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * HTTPS忽略证书验证,防止高版本jdk因证书算法不符合约束条件,使用继承X509ExtendedTrustManager的方式</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyX509TrustManager</span> <span class="keyword">extends</span> <span class="title">X509ExtendedTrustManager</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkClientTrusted</span><span class="params">(X509Certificate[] arg0, String arg1)</span> <span class="keyword">throws</span> CertificateException </span>&#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkServerTrusted</span><span class="params">(X509Certificate[] arg0, String arg1)</span> <span class="keyword">throws</span> CertificateException </span>&#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> X509Certificate[] getAcceptedIssuers() &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkClientTrusted</span><span class="params">(X509Certificate[] arg0, String arg1, Socket arg2)</span> <span class="keyword">throws</span> CertificateException </span>&#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkClientTrusted</span><span class="params">(X509Certificate[] arg0, String arg1, SSLEngine arg2)</span></span></span><br><span class="line"><span class="function">                <span class="keyword">throws</span> CertificateException </span>&#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkServerTrusted</span><span class="params">(X509Certificate[] arg0, String arg1, Socket arg2)</span> <span class="keyword">throws</span> CertificateException </span>&#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkServerTrusted</span><span class="params">(X509Certificate[] arg0, String arg1, SSLEngine arg2)</span></span></span><br><span class="line"><span class="function">                <span class="keyword">throws</span> CertificateException </span>&#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SSLContext <span class="title">MyX509TrustManagerUtils</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        TrustManager[] tm = &#123; <span class="keyword">new</span> HttpsUtils().<span class="keyword">new</span> MyX509TrustManager() &#125;;</span><br><span class="line">        SSLContext ctx = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ctx = SSLContext.getInstance(<span class="string">"TLS"</span>);</span><br><span class="line">            ctx.init(<span class="keyword">null</span>, tm, <span class="keyword">null</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ctx;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>For More:</p><ul><li><a href="https://blog.csdn.net/M1mory/article/details/76944668" rel="external nofollow noopener noreferrer" target="_blank">Java实现 http/https的 Post、Get、代理访问请求</a></li><li><a href="https://www.oschina.net/code/snippet_2266157_45252" rel="external nofollow noopener noreferrer" target="_blank">Java实现 Http 的 Post、Get、代理访问请求</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;写好接口给 Java 的小伙伴调用，遇到使用Java发送http或者https请求的需求。和小伙伴在网上遛了一圈，找了很多代码都没能成功发送 Content-Type 为 “application/x-www-form-urlencoded” 的 POST 请求（ T_T 可能我们不熟悉 Java ）。最后，发现 &lt;a href=&quot;https://blog.csdn.net/M1mory/article/details/76944668&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;M1mory&lt;/a&gt; 的能用。因此，稍作修改记录下来，方便以后使用。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>在 Ubuntu 16.04 中安装 Kurento Server</title>
    <link href="https://naturalwill.github.io/2018/05/15/install-kurento-server-in-ubuntu-16-04/"/>
    <id>https://naturalwill.github.io/2018/05/15/install-kurento-server-in-ubuntu-16-04/</id>
    <published>2018-05-15T07:54:07.000Z</published>
    <updated>2020-01-11T08:47:31.295Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">REPO=<span class="string">"xenial"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deb http://ubuntu.kurento.org <span class="variable">$REPO</span> kms6"</span> | sudo tee /etc/apt/sources.list.d/kurento.list</span><br><span class="line">wget http://ubuntu.kurento.org/kurento.gpg.key -O - | sudo apt-key add -</span><br><span class="line">apt update</span><br><span class="line">useradd -U -m kurento</span><br><span class="line">apt install -y kurento-media-server-6.0</span><br><span class="line">systemctl start kurento-media-server-6.0</span><br><span class="line">systemctl <span class="built_in">enable</span> kurento-media-server-6.0</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="添加-H-264-支持"><a href="#添加-H-264-支持" class="headerlink" title="添加 H.264 支持"></a>添加 H.264 支持</h2><p>安装插件 <code>openh264-gst-plugins-bad-1.5</code></p><pre><code>apt install -y openh264-gst-plugins-bad-1.5</code></pre><p>重启 kurento server</p><pre><code>systemctl restart kurento-media-server-6.0</code></pre><p>若要只支持 H.264 则需要打开 <code>/etc/kurento/modules/kurento/SdpEndpoint.conf.json</code> ，注释掉 videoCodecs 中的 “VP8/90000” 。修改之后的文件像这样的。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="comment">// ... omit ...</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">"videoCodecs"</span> : [</span><br><span class="line">    <span class="comment">// &#123;</span></span><br><span class="line">    <span class="comment">//   "name" : "VP8/90000"</span></span><br><span class="line">    <span class="comment">// &#125;,</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"name"</span> : <span class="string">"H264/90000"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>保存并重启 Kurento Server 。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;REPO=&lt;span class=&quot;string&quot;&gt;&quot;xenial&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;deb http://ubuntu.kurento.org &lt;span class=&quot;variable&quot;&gt;$REPO&lt;/span&gt; kms6&quot;&lt;/span&gt; | sudo tee /etc/apt/sources.list.d/kurento.list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget http://ubuntu.kurento.org/kurento.gpg.key -O - | sudo apt-key add -&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apt update&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;useradd -U -m kurento&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;apt install -y kurento-media-server-6.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl start kurento-media-server-6.0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;systemctl &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt; kurento-media-server-6.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="计算机" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="Linux" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/"/>
    
      <category term="部署" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="Kurento" scheme="https://naturalwill.github.io/tags/Kurento/"/>
    
  </entry>
  
  <entry>
    <title>Linux 使用技巧</title>
    <link href="https://naturalwill.github.io/2018/04/16/linux-skill-and-tips/"/>
    <id>https://naturalwill.github.io/2018/04/16/linux-skill-and-tips/</id>
    <published>2018-04-16T05:43:07.000Z</published>
    <updated>2020-01-11T08:47:31.291Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h2><p>批量修改当前目录及子目录中的文件夹权限为 775 、文件权限为 664</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find . -<span class="built_in">type</span> f -<span class="built_in">exec</span> chmod 664 &#123;&#125; \+ -o -<span class="built_in">type</span> d -<span class="built_in">exec</span> chmod 775 &#123;&#125; \+</span><br></pre></td></tr></table></figure><h2 id="find"><a href="#find" class="headerlink" title="find"></a>find</h2><p>find 命令中 <code>exec</code> 参数 <code>+</code> 结尾与 <code>;</code> 结尾有什么区别？</p><a id="more"></a><blockquote><p>Why is there a difference in output between using</p><pre><code>find . -exec ls &apos;{}&apos; \+</code></pre><p>and</p><pre><code>find . -exec ls &apos;{}&apos; \;</code></pre><p>This might be best illustrated with an example. Let’s say that find turns up these files:</p><pre><code>file1file2file3</code></pre><p>Using -exec with a semicolon (find . -exec ls ‘{}’ \;), will execute</p><pre><code>ls file1ls file2ls file3</code></pre><p>But if you use a plus sign instead (find . -exec ls ‘{}’ +), as many filenames as possible are passed as arguments to a single command:</p><pre><code>ls file1 file2 file3</code></pre><p>The number of filenames is only limited by the system’s maximum command line length. If the command exceeds this length, the command will be called multiple times.</p></blockquote><h2 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h2><p>以下命令可以查看磁盘各分区大小、已用空间等信息：</p><pre><code>df -h</code></pre><p>以下命令可以查看foo目录的大小：</p><pre><code>du -sh foo</code></pre><p>有时候，硬盘比较满了，我们想找一些目录来清除，可以用下面命令查看当前目录以下搜索文件和子目录大小。找出特别大的，看里面有没有文件可删：</p><pre><code>du -sh *</code></pre><p>如果我们插入了一个U盘或移动硬盘，可以用df命令查看它挂载的地方，通常在/mnt或/media下。如果想卸载USB存储设备，可以用umount命令：</p><pre><code>umount path</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文件权限&quot;&gt;&lt;a href=&quot;#文件权限&quot; class=&quot;headerlink&quot; title=&quot;文件权限&quot;&gt;&lt;/a&gt;文件权限&lt;/h2&gt;&lt;p&gt;批量修改当前目录及子目录中的文件夹权限为 775 、文件权限为 664&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;find . -&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; f -&lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; chmod 664 &amp;#123;&amp;#125; \+ -o -&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; d -&lt;span class=&quot;built_in&quot;&gt;exec&lt;/span&gt; chmod 775 &amp;#123;&amp;#125; \+&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;find&quot;&gt;&lt;a href=&quot;#find&quot; class=&quot;headerlink&quot; title=&quot;find&quot;&gt;&lt;/a&gt;find&lt;/h2&gt;&lt;p&gt;find 命令中 &lt;code&gt;exec&lt;/code&gt; 参数 &lt;code&gt;+&lt;/code&gt; 结尾与 &lt;code&gt;;&lt;/code&gt; 结尾有什么区别？&lt;/p&gt;
    
    </summary>
    
      <category term="计算机" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="Skills" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/Skills/"/>
    
    
  </entry>
  
  <entry>
    <title>C# 获取文件的真实类型</title>
    <link href="https://naturalwill.github.io/2018/04/16/get-file-mime-type-without-file-extension/"/>
    <id>https://naturalwill.github.io/2018/04/16/get-file-mime-type-without-file-extension/</id>
    <published>2018-04-16T05:24:07.000Z</published>
    <updated>2020-01-11T08:47:31.286Z</updated>
    
    <content type="html"><![CDATA[<p>用到的命名空间</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br></pre></td></tr></table></figure><a id="more"></a><blockquote><p>2018/9/5 更新</p></blockquote><p>代码</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NativeMethods</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">DllImport(<span class="meta-string">"urlmon.dll"</span>, CharSet = CharSet.Unicode, ExactSpelling = true, SetLastError = false)</span>]</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">FindMimeFromData</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">        IntPtr pBC,</span></span></span><br><span class="line"><span class="function"><span class="params">        [MarshalAs(UnmanagedType.LPWStr</span>)] <span class="keyword">string</span> pwzUrl,</span></span><br><span class="line"><span class="function">        [<span class="title">MarshalAs</span>(<span class="params">UnmanagedType.LPArray, ArraySubType=UnmanagedType.I1, SizeParamIndex=<span class="number">3</span></span>)]</span></span><br><span class="line"><span class="function">        <span class="keyword">byte</span>[] pBuffer,</span></span><br><span class="line"><span class="function">        <span class="keyword">int</span> cbSize,</span></span><br><span class="line"><span class="function">        [<span class="title">MarshalAs</span>(<span class="params">UnmanagedType.LPWStr</span>)] <span class="keyword">string</span> pwzMimeProposed,</span></span><br><span class="line"><span class="function">        <span class="keyword">int</span> dwMimeFlags,</span></span><br><span class="line"><span class="function">        <span class="keyword">out</span> IntPtr ppwzMimeOut,</span></span><br><span class="line"><span class="function">        <span class="keyword">int</span> dwReserved)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">GetMimeFromFile</span>(<span class="params"><span class="keyword">string</span> filename</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!File.Exists(filename))</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> FileNotFoundException(<span class="string">$"<span class="subst">&#123;filename&#125;</span> not found."</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">256</span>];</span><br><span class="line">        <span class="keyword">using</span> (FileStream fs = <span class="keyword">new</span> FileStream(filename, FileMode.Open))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (fs.Length &gt;= <span class="number">256</span>)</span><br><span class="line">                fs.Read(buffer, <span class="number">0</span>, <span class="number">256</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                fs.Read(buffer, <span class="number">0</span>, (<span class="keyword">int</span>)fs.Length);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            FindMimeFromData(IntPtr.Zero, <span class="literal">null</span>, buffer, <span class="number">256</span>, <span class="literal">null</span>, <span class="number">0</span>, <span class="keyword">out</span> IntPtr mimeTypePtr, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">string</span> mime = Marshal.PtrToStringUni(mimeTypePtr);</span><br><span class="line">            Marshal.FreeCoTaskMem(mimeTypePtr);</span><br><span class="line">            <span class="keyword">return</span> mime;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"unknown/unknown"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下是另一种写法（不推荐），在 64 位平台上会报错。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">NativeMethods</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">DllImport(@<span class="meta-string">"urlmon.dll"</span>, CharSet = CharSet.Auto)</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">extern</span> <span class="keyword">static</span> System.<span class="function">UInt32 <span class="title">FindMimeFromData</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">        System.UInt32 pBC,</span></span></span><br><span class="line"><span class="function"><span class="params">        [MarshalAs(UnmanagedType.LPStr</span>)] System.String pwzUrl,</span></span><br><span class="line"><span class="function">        [<span class="title">MarshalAs</span>(<span class="params">UnmanagedType.LPArray</span>)] <span class="keyword">byte</span>[] pBuffer,</span></span><br><span class="line"><span class="function">        System.UInt32 cbSize,</span></span><br><span class="line"><span class="function">        [<span class="title">MarshalAs</span>(<span class="params">UnmanagedType.LPStr</span>)] System.String pwzMimeProposed,</span></span><br><span class="line"><span class="function">        System.UInt32 dwMimeFlags,</span></span><br><span class="line"><span class="function">        <span class="keyword">out</span> System.UInt32 ppwzMimeOut,</span></span><br><span class="line"><span class="function">        System.UInt32 dwReserverd</span></span><br><span class="line"><span class="function">        )</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">GetMimeFromFile</span>(<span class="params"><span class="keyword">string</span> filename</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!File.Exists(filename))</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> FileNotFoundException(filename + <span class="string">" not found"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">256</span>];</span><br><span class="line">        <span class="keyword">using</span> (FileStream fs = <span class="keyword">new</span> FileStream(filename, FileMode.Open))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (fs.Length &gt;= <span class="number">256</span>)</span><br><span class="line">                fs.Read(buffer, <span class="number">0</span>, <span class="number">256</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                fs.Read(buffer, <span class="number">0</span>, (<span class="keyword">int</span>)fs.Length);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            System.UInt32 mimetype;</span><br><span class="line">            FindMimeFromData(<span class="number">0</span>, <span class="literal">null</span>, buffer, <span class="number">256</span>, <span class="literal">null</span>, <span class="number">0</span>, <span class="keyword">out</span> mimetype, <span class="number">0</span>);</span><br><span class="line">            System.IntPtr mimeTypePtr = <span class="keyword">new</span> IntPtr(mimetype);</span><br><span class="line">            <span class="keyword">string</span> mime = Marshal.PtrToStringUni(mimeTypePtr);</span><br><span class="line">            Marshal.FreeCoTaskMem(mimeTypePtr);</span><br><span class="line">            <span class="keyword">return</span> mime;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"unknown/unknown"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用到的命名空间&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; System;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; System.IO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; System.Runtime.InteropServices;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="计算机" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="编程" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E7%A8%8B/"/>
    
      <category term=".Net" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E7%A8%8B/Net/"/>
    
    
  </entry>
  
  <entry>
    <title>C# 计算文件 MD5</title>
    <link href="https://naturalwill.github.io/2018/04/10/calculate-file-md5/"/>
    <id>https://naturalwill.github.io/2018/04/10/calculate-file-md5/</id>
    <published>2018-04-10T08:58:18.000Z</published>
    <updated>2020-01-11T08:47:31.243Z</updated>
    
    <content type="html"><![CDATA[<p>计算文件 MD5</p><a id="more"></a><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">string</span> <span class="title">CalculateMd5</span>(<span class="params"><span class="keyword">string</span> filename</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> md5 = System.Security.Cryptography.MD5.Create())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> stream = File.OpenRead(filename))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">var</span> hash = md5.ComputeHash(stream);</span><br><span class="line">            <span class="keyword">return</span> BitConverter.ToString(hash).Replace(<span class="string">"-"</span>, <span class="string">""</span>).ToLowerInvariant();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Verify a hash against a string.</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">VerifyMd5Hash</span>(<span class="params"><span class="keyword">string</span> filename, <span class="keyword">string</span> hash</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// Hash the input.</span></span><br><span class="line">    <span class="keyword">string</span> hashOfInput = CalculateMd5(filename);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create a StringComparer an compare the hashes.</span></span><br><span class="line">    StringComparer comparer = StringComparer.OrdinalIgnoreCase;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == comparer.Compare(hashOfInput, hash))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;计算文件 MD5&lt;/p&gt;
    
    </summary>
    
      <category term="计算机" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="编程" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E7%A8%8B/"/>
    
      <category term=".Net" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E7%A8%8B/Net/"/>
    
    
  </entry>
  
  <entry>
    <title>在国内使用 Docker</title>
    <link href="https://naturalwill.github.io/2018/04/08/use-docker-in-china/"/>
    <id>https://naturalwill.github.io/2018/04/08/use-docker-in-china/</id>
    <published>2018-04-08T06:14:57.000Z</published>
    <updated>2020-01-11T08:47:31.238Z</updated>
    
    <content type="html"><![CDATA[<p>在国内安装 docker 或是从 Docker Hub 拉取镜像总是遇到网络慢甚至超时等问题。</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Debian-Ubuntu"><a href="#Debian-Ubuntu" class="headerlink" title="Debian/Ubuntu"></a>Debian/Ubuntu</h3><p>如果你过去安装过 docker，先删掉:</p><pre><code>sudo apt-get remove docker docker-engine docker.io</code></pre><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><pre><code>sudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common</code></pre><h4 id="信任-Docker-的-GPG-公钥"><a href="#信任-Docker-的-GPG-公钥" class="headerlink" title="信任 Docker 的 GPG 公钥"></a>信任 Docker 的 GPG 公钥</h4><p>ubuntu</p><pre><code>curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</code></pre><p>debian</p><pre><code>curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -</code></pre><h4 id="添加软件仓库"><a href="#添加软件仓库" class="headerlink" title="添加软件仓库"></a>添加软件仓库</h4><p>对于 amd64 架构的计算机，请运行:</p><pre><code>sudo add-apt-repository \    &quot;deb [arch=amd64] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu \    $(lsb_release -cs) \    stable&quot;</code></pre><p>如果你是树莓派或其它ARM架构计算机，请运行:</p><pre><code>echo &quot;deb [arch=armhf] https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/ubuntu \    $(lsb_release -cs) stable&quot; | \    sudo tee /etc/apt/sources.list.d/docker.list</code></pre><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><pre><code>sudo apt-get updatesudo apt-get install docker-ce</code></pre><h3 id="Fedora-CentOS-RHEL"><a href="#Fedora-CentOS-RHEL" class="headerlink" title="Fedora/CentOS/RHEL"></a>Fedora/CentOS/RHEL</h3><p>如果你之前安装过 docker，请先删掉</p><pre><code>sudo yum remove docker docker-common docker-selinux docker-engine</code></pre><h4 id="安装依赖-1"><a href="#安装依赖-1" class="headerlink" title="安装依赖"></a>安装依赖</h4><pre><code>sudo yum install -y yum-utils device-mapper-persistent-data lvm2</code></pre><h4 id="添加软件仓库-1"><a href="#添加软件仓库-1" class="headerlink" title="添加软件仓库"></a>添加软件仓库</h4><ol><li>先下载 repo 文件<br> CentOS/RHEL:<br> <code>wget -O /etc/yum.repos.d/docker-ce.repo https://download.docker.com/linux/centos/docker-ce.repo</code><br> Fedora:<br> <code>wget -O /etc/yum.repos.d/docker-ce.repo https://download.docker.com/linux/fedora/docker-ce.repo</code></li><li>把软件仓库地址替换为 TUNA:<br> <code>sudo sed -i &#39;s+download.docker.com+mirrors.tuna.tsinghua.edu.cn/docker-ce+&#39; /etc/yum.repos.d/docker-ce.repo</code></li></ol><h4 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h4><pre><code>sudo yum makecache fastsudo yum install docker-ce</code></pre><h2 id="普通用户使用"><a href="#普通用户使用" class="headerlink" title="普通用户使用"></a>普通用户使用</h2><p>将用户加入 docker 用户组</p><pre><code>$ gpasswd -a user docker</code></pre><h2 id="使用国内的镜像仓库"><a href="#使用国内的镜像仓库" class="headerlink" title="使用国内的镜像仓库"></a>使用国内的镜像仓库</h2><p>这是 Docker 官方提供的中国 registry mirror</p><pre><code>registry.docker-cn.com</code></pre><h3 id="临时使用"><a href="#临时使用" class="headerlink" title="临时使用"></a>临时使用</h3><p>pull 时，加上 registry 地址，如：</p><pre><code>$ docker pull registry.docker-cn.com/library/ubuntu</code></pre><h3 id="永久使用"><a href="#永久使用" class="headerlink" title="永久使用"></a>永久使用</h3><p>方法一： 将 <code>https://registry.docker-cn.com</code> 加入到 <code>/etc/docker/daemon.json</code> 中的 registry-mirrors 数组中。修改后的文件内容应该是这样的。</p><pre><code>{    &quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;]}</code></pre><p>重启 Docker 服务。</p><p>方法二： 启动 Docker daemon 时，带上 –registry-mirror 参数。如。</p><pre><code>$ dockerd --registry-mirror=https://registry.docker-cn.com</code></pre><h2 id="安装-docker-compose"><a href="#安装-docker-compose" class="headerlink" title="安装 docker-compose"></a>安装 docker-compose</h2><p>下载 compose 文件</p><pre><code>sudo curl -L https://github.com/docker/compose/releases/download/1.20.1/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose</code></pre><p>添加执行权限</p><pre><code>sudo chmod +x /usr/local/bin/docker-compose</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在国内安装 docker 或是从 Docker Hub 拉取镜像总是遇到网络慢甚至超时等问题。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="Notes" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/Notes/"/>
    
    
      <category term="Docker" scheme="https://naturalwill.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Visual Studio 技巧</title>
    <link href="https://naturalwill.github.io/2018/04/03/visual-studio-skill/"/>
    <id>https://naturalwill.github.io/2018/04/03/visual-studio-skill/</id>
    <published>2018-04-03T01:57:52.000Z</published>
    <updated>2020-01-11T08:47:31.234Z</updated>
    
    <content type="html"><![CDATA[<h2 id="重新安装-NuGet-包"><a href="#重新安装-NuGet-包" class="headerlink" title="重新安装 NuGet 包"></a>重新安装 NuGet 包</h2><p>有时候打开项目，发现 NuGet 包全部丢失了，点击<code>还原 NuGet 包</code>也没有任何作用。</p><p>这时我们可以点击<code>工具</code>-&gt;<code>NuGet 包管理器</code>-&gt;<code>程序包管理控制台</code>打开控制台，在里面输入以下命令重新安装解决方案的 NuGet 包。</p><pre><code>Update-Package -Reinstall</code></pre><p>也可以只重新安装某一项目的 NuGet 包。</p><pre><code>Update-Package -ProjectName &quot;DemoProject&quot; -Reinstall</code></pre><h2 id="DXERR-LIB"><a href="#DXERR-LIB" class="headerlink" title="DXERR.LIB"></a>DXERR.LIB</h2><p><strong>VS 2015 / 2017:</strong>The VS 2015 / 2017 C Runtime is not compatible with the<code>DXERR.LIB</code>that ships in the legacy DirectX SDK. You will get link errors trying to use it. You can use this module to replace DXERR LIB but will have to rebuild the code that uses it. You can try linking with<code>legacy_stdio_definitions.lib</code>instead, but ideally you’d remove this dependency on the legacy DirectX SDK.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;重新安装-NuGet-包&quot;&gt;&lt;a href=&quot;#重新安装-NuGet-包&quot; class=&quot;headerlink&quot; title=&quot;重新安装 NuGet 包&quot;&gt;&lt;/a&gt;重新安装 NuGet 包&lt;/h2&gt;&lt;p&gt;有时候打开项目，发现 NuGet 包全部丢失了，点击&lt;cod
      
    
    </summary>
    
      <category term="计算机" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="Skills" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/Skills/"/>
    
    
      <category term="NuGet" scheme="https://naturalwill.github.io/tags/NuGet/"/>
    
      <category term="VisualStudio" scheme="https://naturalwill.github.io/tags/VisualStudio/"/>
    
  </entry>
  
  <entry>
    <title>C++ 11 实现线程安全的环形缓冲区</title>
    <link href="https://naturalwill.github.io/2018/03/23/thread-safe-ring-buffer-implementation-in-cpp11/"/>
    <id>https://naturalwill.github.io/2018/03/23/thread-safe-ring-buffer-implementation-in-cpp11/</id>
    <published>2018-03-23T09:44:26.000Z</published>
    <updated>2020-01-11T08:47:31.229Z</updated>
    
    <content type="html"><![CDATA[<p>环形缓冲区（<a href="https://zh.wikipedia.org/wiki/%E7%92%B0%E5%BD%A2%E7%B7%A9%E8%A1%9D%E5%8D%80" rel="external nofollow noopener noreferrer" target="_blank">Ring Buffer</a>），是一种用于表示一个固定尺寸、头尾相连的缓冲区的数据结构，适合缓存数据流。</p><p>环形缓冲区的一个有用特性是：当一个数据元素被用掉后，其余数据元素不需要移动其存储位置。换句话说，环形缓冲区适合实现先进先出缓冲区。</p><p><link href="/style/ringbuffer.css" rel="stylesheet" type="text/css"></p><div style="text-align: center"><div class="lds-ring"><div></div><div></div><div></div><div></div></div></div><blockquote><p>由于计算机内存是线性地址空间，因此环形缓冲区需要特别的设计才可以从逻辑上实现。<br>一般的，环形缓冲区需要4个指针：</p><ul><li>在内存中实际开始位置；</li><li>在内存中实际结束位置，也可以用缓冲区长度代替；</li><li>存储在缓冲区中的有效数据的开始位置（读指针）；</li><li>存储在缓冲区中的有效数据的结尾位置（写指针）。</li></ul></blockquote><blockquote><p>缓冲区是满、或是空，都有可能出现读指针与写指针指向同一位置，有多种策略用于检测缓冲区是满、或是空：</p><ul><li>总是保持一个存储单元为空</li><li>使用数据计数</li><li>镜像指示位</li><li>读/写 计数</li><li>记录最后的操作</li></ul></blockquote><a id="more"></a><p>以下是使用数据计数策略用于检测缓冲区是满、或是空，使用自旋锁保证线程安全的高效环形缓冲区。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* ring_buffer_s.h</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mutex&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"spin_mutex.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* \brief 线程安全的环形缓冲区</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ring_buffer_s</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">ring_buffer_s</span><span class="params">(<span class="keyword">size_t</span> capacity)</span></span>;</span><br><span class="line">    ring_buffer_s(ring_buffer_s &amp;&amp;) = <span class="keyword">delete</span>;</span><br><span class="line">    ring_buffer_s&amp; <span class="keyword">operator</span>=(ring_buffer_s&amp;&amp; other) = <span class="keyword">delete</span>;</span><br><span class="line"></span><br><span class="line">    ring_buffer_s(<span class="keyword">const</span> ring_buffer_s &amp;) = <span class="keyword">delete</span>;</span><br><span class="line">    ring_buffer_s&amp; <span class="keyword">operator</span>=(<span class="keyword">const</span> ring_buffer_s&amp; other) = <span class="keyword">delete</span>;</span><br><span class="line"></span><br><span class="line">    ~ring_buffer_s();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * \brief 获取缓冲区已用大小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">size_t</span> size() <span class="keyword">const</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * \brief 获取缓冲区容量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">size_t</span> capacity() <span class="keyword">const</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * \brief 写入数据</span></span><br><span class="line"><span class="comment">     * \param data 要写入的数据</span></span><br><span class="line"><span class="comment">     * \param bytes 要写入的数据的大小</span></span><br><span class="line"><span class="comment">     * \return 最终写入的数据的大小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">size_t</span> write(<span class="keyword">const</span> <span class="keyword">void</span> *data, <span class="keyword">size_t</span> bytes);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * \brief 读取数据</span></span><br><span class="line"><span class="comment">     * \param data 用来存放读取数据的buffer</span></span><br><span class="line"><span class="comment">     * \param bytes 要读取的数据大小</span></span><br><span class="line"><span class="comment">     * \return 最终获取到的数据的大小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">size_t</span> read(<span class="keyword">void</span> *data, <span class="keyword">size_t</span> bytes);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="keyword">size_t</span> front_, rear_, size_, capacity_;</span><br><span class="line">    <span class="keyword">uint8_t</span> *data_;</span><br><span class="line">    <span class="keyword">mutable</span> spin_mutex mut_;</span><br><span class="line">    <span class="keyword">mutable</span> <span class="built_in">std</span>::mutex mut_read_;</span><br><span class="line">    <span class="keyword">mutable</span> <span class="built_in">std</span>::mutex mut_write_;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* ring_buffer_s.cpp</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ring_buffer_s.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> ring_buffer_s::ring_buffer_s(<span class="keyword">const</span> <span class="keyword">size_t</span> capacity)</span><br><span class="line">    : front_(<span class="number">0</span>)</span><br><span class="line">    , rear_(<span class="number">0</span>)</span><br><span class="line">    , size_(<span class="number">0</span>)</span><br><span class="line">    , capacity_(capacity)</span><br><span class="line">&#123;</span><br><span class="line">    data_ = <span class="keyword">new</span> <span class="keyword">uint8_t</span>[capacity];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> ring_buffer_s::~ring_buffer_s()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span>[] data_;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">size_t</span> ring_buffer_s::size() <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> size_;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">size_t</span> ring_buffer_s::capacity() <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> capacity_;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">size_t</span> ring_buffer_s::write(<span class="keyword">const</span> <span class="keyword">void</span> *data, <span class="keyword">const</span> <span class="keyword">size_t</span> bytes)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (bytes == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过互斥量保证任意时刻，至多只有一个线程在写数据。</span></span><br><span class="line">    <span class="built_in">std</span>::lock_guard&lt;<span class="built_in">std</span>::mutex&gt;lk_write(mut_write_);</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">auto</span> capacity = capacity_;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">auto</span> bytes_to_write = <span class="built_in">std</span>::min(bytes, capacity - size_);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (bytes_to_write == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一次性写入</span></span><br><span class="line">    <span class="keyword">if</span> (bytes_to_write &lt;= capacity - rear_)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(data_ + rear_, data, bytes_to_write);</span><br><span class="line">        rear_ += bytes_to_write;</span><br><span class="line">        <span class="keyword">if</span> (rear_ == capacity) rear_ = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 分两步进行</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">auto</span> size_1 = capacity - rear_;</span><br><span class="line">        <span class="built_in">memcpy</span>(data_ + rear_, data, size_1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">auto</span> size_2 = bytes_to_write - size_1;</span><br><span class="line">        <span class="built_in">memcpy</span>(data_, <span class="keyword">static_cast</span>&lt;<span class="keyword">const</span> <span class="keyword">uint8_t</span>*&gt;(data) + size_1, size_2);</span><br><span class="line">        rear_ = size_2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过自旋锁保证任意时刻，至多只有一个线程在改变 size_ .</span></span><br><span class="line">    <span class="built_in">std</span>::lock_guard&lt;spin_mutex&gt;lk(mut_);</span><br><span class="line">    size_ += bytes_to_write;</span><br><span class="line">    <span class="keyword">return</span> bytes_to_write;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">size_t</span> ring_buffer_s::read(<span class="keyword">void</span> *data, <span class="keyword">const</span> <span class="keyword">size_t</span> bytes)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (bytes == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过互斥量保证任意时刻，至多只有一个线程在读数据。</span></span><br><span class="line">    <span class="built_in">std</span>::lock_guard&lt;<span class="built_in">std</span>::mutex&gt;lk_read(mut_read_);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">auto</span> capacity = capacity_;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">auto</span> bytes_to_read = <span class="built_in">std</span>::min(bytes, size_);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (bytes_to_read == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一次性读取</span></span><br><span class="line">    <span class="keyword">if</span> (bytes_to_read &lt;= capacity - front_)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(data, data_ + front_, bytes_to_read);</span><br><span class="line">        front_ += bytes_to_read;</span><br><span class="line">        <span class="keyword">if</span> (front_ == capacity) front_ = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 分两步进行</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">auto</span> size_1 = capacity - front_;</span><br><span class="line">        <span class="built_in">memcpy</span>(data, data_ + front_, size_1);</span><br><span class="line">        <span class="keyword">const</span> <span class="keyword">auto</span> size_2 = bytes_to_read - size_1;</span><br><span class="line">        <span class="built_in">memcpy</span>(<span class="keyword">static_cast</span>&lt;<span class="keyword">uint8_t</span>*&gt;(data) + size_1, data_, size_2);</span><br><span class="line">        front_ = size_2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过自旋锁保证任意时刻，至多只有一个线程在改变 size_ .</span></span><br><span class="line">    <span class="built_in">std</span>::lock_guard&lt;spin_mutex&gt;lk(mut_);</span><br><span class="line">    size_ -= bytes_to_read;</span><br><span class="line">    <span class="keyword">return</span> bytes_to_read;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* spin_mutex.h</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;atomic&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">spin_mutex</span> &#123;</span></span><br><span class="line">    <span class="built_in">std</span>::atomic_flag flag_ = ATOMIC_FLAG_INIT;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    spin_mutex() = <span class="keyword">default</span>;</span><br><span class="line">    ~spin_mutex() = <span class="keyword">default</span>;</span><br><span class="line">    spin_mutex(<span class="keyword">const</span> spin_mutex&amp;) = <span class="keyword">delete</span>;</span><br><span class="line">    spin_mutex&amp; <span class="keyword">operator</span>= (<span class="keyword">const</span> spin_mutex&amp;) = <span class="keyword">delete</span>;</span><br><span class="line">    spin_mutex(spin_mutex&amp;&amp;) = <span class="keyword">delete</span>;</span><br><span class="line">    spin_mutex&amp; <span class="keyword">operator</span>= (spin_mutex&amp;&amp;) = <span class="keyword">delete</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">lock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (flag_.test_and_set(<span class="built_in">std</span>::memory_order_acquire))</span><br><span class="line">            ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">unlock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        flag_.clear(<span class="built_in">std</span>::memory_order_release);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;环形缓冲区（&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E7%92%B0%E5%BD%A2%E7%B7%A9%E8%A1%9D%E5%8D%80&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Ring Buffer&lt;/a&gt;），是一种用于表示一个固定尺寸、头尾相连的缓冲区的数据结构，适合缓存数据流。&lt;/p&gt;
&lt;p&gt;环形缓冲区的一个有用特性是：当一个数据元素被用掉后，其余数据元素不需要移动其存储位置。换句话说，环形缓冲区适合实现先进先出缓冲区。&lt;/p&gt;
&lt;p&gt;&lt;link href=&quot;/style/ringbuffer.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;&lt;div class=&quot;lds-ring&quot;&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;由于计算机内存是线性地址空间，因此环形缓冲区需要特别的设计才可以从逻辑上实现。&lt;br&gt;一般的，环形缓冲区需要4个指针：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在内存中实际开始位置；&lt;/li&gt;
&lt;li&gt;在内存中实际结束位置，也可以用缓冲区长度代替；&lt;/li&gt;
&lt;li&gt;存储在缓冲区中的有效数据的开始位置（读指针）；&lt;/li&gt;
&lt;li&gt;存储在缓冲区中的有效数据的结尾位置（写指针）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;缓冲区是满、或是空，都有可能出现读指针与写指针指向同一位置，有多种策略用于检测缓冲区是满、或是空：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;总是保持一个存储单元为空&lt;/li&gt;
&lt;li&gt;使用数据计数&lt;/li&gt;
&lt;li&gt;镜像指示位&lt;/li&gt;
&lt;li&gt;读/写 计数&lt;/li&gt;
&lt;li&gt;记录最后的操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="计算机" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="编程" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="C/C++" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E7%A8%8B/C-C/"/>
    
    
  </entry>
  
  <entry>
    <title>听书笔记之《非暴力沟通》</title>
    <link href="https://naturalwill.github.io/2018/02/28/Reading-Note-of-Nonviolent-Communication/"/>
    <id>https://naturalwill.github.io/2018/02/28/Reading-Note-of-Nonviolent-Communication/</id>
    <published>2018-02-28T14:24:56.000Z</published>
    <updated>2020-01-11T08:47:31.225Z</updated>
    
    <content type="html"><![CDATA[<p>作者：马歇尔·卢森堡</p><p>旨在帮助我们用不批评、不指责的方式去与人交谈，化解冲突，增进感情。</p><p>最佳应用于较亲密的关系。</p><p>我们最容易伤害的是我们最亲近的人。</p><a id="more"></a><p><img src="/images/Nonviolent-Communication-Notes.png" alt="Nonviolent Communication"></p><h2 id="四个沟通技巧"><a href="#四个沟通技巧" class="headerlink" title="四个沟通技巧"></a>四个沟通技巧</h2><p>让自己不发起暴力沟通</p><ol><li>观察事实和表达事实</li><li>体会和表达感受</li><li>发现需要</li><li>提出明确的请求</li></ol><h3 id="观察事实和表达事实"><a href="#观察事实和表达事实" class="headerlink" title="观察事实和表达事实"></a>观察事实和表达事实</h3><p>区分事实和看法。</p><p>主观词：我认为、我觉得、你总是…………</p><h3 id="体会和表达感受"><a href="#体会和表达感受" class="headerlink" title="体会和表达感受"></a>体会和表达感受</h3><p>感受由心而发，感性，容易唤起引发对方的同理心。看法是理性思考产生，”贴标签”容易引起对方本能的抗拒和反驳。</p><p>区分想法、评价和感受</p><blockquote><p>我觉得我弹得不好</p></blockquote><p>这是一种评价。</p><blockquote><p>作为吉他手，我感到很难过、失落</p></blockquote><p>这是在表达感受。</p><ol><li>用来表达我们的需要得到满足时的感受<br>兴奋、甜蜜、精力充沛、兴高采烈、喜悦、自信、开心、高兴、幸福、愉快、满足、欣慰、陶醉等。</li><li>用来表达我们的需要没有得到满足时的感受<br>害怕、担心、焦虑、忧虑、着急、紧张不安丶心神不宁丶悲伤、绝望、气腰丶灰心丶烦恼、愤怒、生气、厌烦等。</li><li>表达想法而非感受<br>披抛弃、被羞辱、被虐待、被打扰、被拒绝、不受重视、被欺负、无人理睬、没人赏识、被利用等。</li></ol><h3 id="发现需要"><a href="#发现需要" class="headerlink" title="发现需要"></a>发现需要</h3><p>内在的需要，如：被关心、尊重、认可。</p><blockquote><p>人们常常认为自己的负面情绪是由别人造成的。</p></blockquote><p>人的感受是由自己的需要造成的，不是由对方的行为造成的。如：你对他人的期待。</p><h3 id="提出明确的请求"><a href="#提出明确的请求" class="headerlink" title="提出明确的请求"></a>提出明确的请求</h3><p>一旦知道自己需要什么，直接具体的表达自己的需求。（避免抽象，要具有可操作性）</p><h2 id="应对暴力沟通"><a href="#应对暴力沟通" class="headerlink" title="应对暴力沟通"></a>应对暴力沟通</h2><h3 id="应对别人的暴力语言"><a href="#应对别人的暴力语言" class="headerlink" title="应对别人的暴力语言"></a>应对别人的暴力语言</h3><ol><li><p>平静，事实，原因，对方的行为，自己的想法、感受、需要，提出请求。</p></li><li><p>平静，事实，原因，倾听，分析其感受、需要，引导对方说出明确的需求。</p></li></ol><h3 id="应对自己的暴力语言"><a href="#应对自己的暴力语言" class="headerlink" title="应对自己的暴力语言"></a>应对自己的暴力语言</h3><blockquote><p>如果你犯了错，也要理解、宽恕你自己，尽快调整自己，把注意力放在目标上，而不是一味的自责，因为那只会让你禁锢在原地，只有反思之后的行动，才有意义。</p></blockquote><p>我应该/不得不这样做 -&gt; 写下来，理解自己行为的动机，化被动为主动 -&gt; 我选择这样做，是因为什么。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作者：马歇尔·卢森堡&lt;/p&gt;
&lt;p&gt;旨在帮助我们用不批评、不指责的方式去与人交谈，化解冲突，增进感情。&lt;/p&gt;
&lt;p&gt;最佳应用于较亲密的关系。&lt;/p&gt;
&lt;p&gt;我们最容易伤害的是我们最亲近的人。&lt;/p&gt;
    
    </summary>
    
      <category term="听书笔记" scheme="https://naturalwill.github.io/categories/%E5%90%AC%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="沟通" scheme="https://naturalwill.github.io/tags/%E6%B2%9F%E9%80%9A/"/>
    
  </entry>
  
  <entry>
    <title>代理和镜像设置</title>
    <link href="https://naturalwill.github.io/2018/02/10/proxy-and-mirror-notes/"/>
    <id>https://naturalwill.github.io/2018/02/10/proxy-and-mirror-notes/</id>
    <published>2018-02-10T05:52:18.000Z</published>
    <updated>2020-01-11T08:47:31.219Z</updated>
    
    <content type="html"><![CDATA[<p>代理地址格式： <code>protocol://[user[:pass]@]host[:port]/</code></p><p>假设代理地址为： <a href="http://127.0.0.1:1080" rel="external nofollow noopener noreferrer" target="_blank">http://127.0.0.1:1080</a></p><a id="more"></a><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><pre><code>export http_proxy=&quot;http://127.0.0.1:1080&quot;export https_proxy=&quot;http://127.0.0.1:1080&quot;</code></pre><!--     export ftp_proxy="http://127.0.0.1:1080"--><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><pre><code>git config --global https.proxy http://127.0.0.1:1080git config --global https.proxy http://127.0.0.1:1080git config --global --unset http.proxygit config --global --unset https.proxy</code></pre><h3 id="Npm"><a href="#Npm" class="headerlink" title="Npm"></a>Npm</h3><h4 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h4><p>npm获取配置有 6 种方式，优先级由高到底。</p><ol><li><p>命令行参数。 </p><pre><code>npm install --proxy http://127.0.0.1:1080 [name]</code></pre></li><li><p>环境变量。 以 <code>npm_config_</code> 为前缀的环境变量将会被认为是 npm 的配置属性。</p><pre><code>export npm_config_proxy=http://127.0.0.1:1080</code></pre></li><li><p>用户配置文件。可以通过 <code>npm config get userconfig</code> 查看文件路径。</p><pre><code>npm config set proxy http://127.0.0.1:1080npm config set https-proxy http://127.0.0.1:1080</code></pre></li><li><p>全局配置文件。可以通过 <code>npm config get globalconfig</code> 查看文件路径。</p><pre><code>npm config set proxy http://127.0.0.1:1080npm config set https-proxy http://127.0.0.1:1080</code></pre></li><li><p>内置配置文件。安装 npm 的目录下的 <code>npmrc</code> 文件。</p></li><li><p>默认配置。 npm 本身有默认配置参数，如果以上 5 条都没设置，则 npm 会使用默认配置参数。</p></li></ol><h4 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h4><ul><li>淘宝npm镜像<pre><code>搜索地址：&lt;http://npm.taobao.org/&gt;registry地址：&lt;http://registry.npm.taobao.org/&gt;</code></pre></li><li>cnpmjs镜像<pre><code>搜索地址：&lt;http://cnpmjs.org/&gt;registry地址：&lt;http://r.cnpmjs.org/&gt;</code></pre></li></ul><ol><li><p>临时使用</p><pre><code>npm --registry https://registry.npm.taobao.org install [name]</code></pre></li><li><p>持久使用</p><pre><code>npm config set registry https://registry.npm.taobao.org// 配置后可通过下面方式来验证是否成功npm config get registry// 或npm info [name]</code></pre></li><li><p>通过cnpm使用</p><pre><code>npm install -g cnpm --registry=https://registry.npm.taobao.org// 使用cnpm install [name]</code></pre></li></ol><h2 id="yarn"><a href="#yarn" class="headerlink" title="yarn"></a>yarn</h2><p>设置为官方镜像：</p><pre><code>yarn config set registry https://registry.yarnpkg.com</code></pre><p>设置为淘宝镜像：</p><pre><code>yarn config set registry http://registry.npm.taobao.org</code></pre><h3 id="CLI-commands-comparison"><a href="#CLI-commands-comparison" class="headerlink" title="CLI commands comparison"></a>CLI commands comparison</h3><p>| npm (v5) | Yarn |<br>| <code>npm install</code> | <code>yarn install</code> |<br>| (N/A) | <code>yarn install --flat</code> |<br>| (N/A) | <code>yarn install --har</code> |<br>| <code>npm install --no-package-lock</code> | <code>yarn install --no-lockfile</code> |<br>| (N/A) | <code>yarn install --pure-lockfile</code> |<br>| <code>npm install [package] --save</code> | <code>yarn add [package]</code> |<br>| <code>npm install [package] --save-dev</code> | <code>yarn add [package] --dev</code> |<br>| (N/A) | <code>yarn add [package] --peer</code> |<br>| <code>npm install [package] --save-optional</code> | <code>yarn add [package] --optional</code> |<br>| <code>npm install [package] --save-exact</code> | <code>yarn add [package] --exact</code> |<br>| (N/A) | <code>yarn add [package] --tilde</code> |<br>| <code>npm install [package] --global</code> | <code>yarn global add [package]</code> |<br>| <code>npm update --global</code> | <code>yarn global upgrade</code> |<br>| <code>npm rebuild</code> | <code>yarn add --force</code> |<br>| <code>npm uninstall [package]</code> | <code>yarn remove [package]</code> |<br>| <code>npm cache clean</code> | <code>yarn cache clean [package]</code> |<br>| <code>rm -rf node_modules &amp;&amp; npm install</code> | <code>yarn upgrade</code> |<br>| <code>npm version major</code> | <code>yarn version --major</code> |<br>| <code>npm version minor</code> | <code>yarn version --minor</code> |<br>| <code>npm version patch</code> | <code>yarn version --patch</code> |</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代理地址格式： &lt;code&gt;protocol://[user[:pass]@]host[:port]/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;假设代理地址为： &lt;a href=&quot;http://127.0.0.1:1080&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;http://127.0.0.1:1080&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="计算机" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="Notes" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/Notes/"/>
    
    
      <category term="proxy" scheme="https://naturalwill.github.io/tags/proxy/"/>
    
      <category term="mirror" scheme="https://naturalwill.github.io/tags/mirror/"/>
    
      <category term="npm" scheme="https://naturalwill.github.io/tags/npm/"/>
    
      <category term="yarn" scheme="https://naturalwill.github.io/tags/yarn/"/>
    
  </entry>
  
  <entry>
    <title>那些年，在 .Net 里踩过的坑</title>
    <link href="https://naturalwill.github.io/2018/02/07/Traps-and-Pitfalls-of-dotNet/"/>
    <id>https://naturalwill.github.io/2018/02/07/Traps-and-Pitfalls-of-dotNet/</id>
    <published>2018-02-07T08:48:16.000Z</published>
    <updated>2020-01-11T08:47:31.215Z</updated>
    
    <content type="html"><![CDATA[<h2 id="WPF-与-WinForm-混用"><a href="#WPF-与-WinForm-混用" class="headerlink" title="WPF 与 WinForm 混用"></a>WPF 与 WinForm 混用</h2><h3 id="AllowsTransparency-amp-WindowsFormsHost"><a href="#AllowsTransparency-amp-WindowsFormsHost" class="headerlink" title="AllowsTransparency &amp; WindowsFormsHost"></a>AllowsTransparency &amp; WindowsFormsHost</h3><p>WPF 启用窗体透明(<code>AllowsTransparency=&quot;true&quot;</code>) 后， <code>WindowsFormsHost</code> 的内容不可见。</p><a id="more"></a><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>这是一个 Win32 的限制。</p><p>使用 <code>WS_EX_LAYERED</code> 和 <code>UpdateLayeredWindow()</code> 的分层窗体不支持子窗体。</p><p>要支持子窗口需要使用不变的不透明度 (<code>WS_EX_LAYERED</code> and <code>SetLayeredWindowAttributes()</code>) 。</p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>一个较好的解决方案，见 <a href="https://blogs.msdn.microsoft.com/changov/2009/01/19/webbrowser-control-on-transparent-wpf-window/" rel="external nofollow noopener noreferrer" target="_blank">webbrowser-control-on-transparent-wpf-window</a>。</p><p>感谢 <a href="https://stackoverflow.com/questions/4108531/wpf-windowsformshost-is-not-visible-when-allowstransparency-true" rel="external nofollow noopener noreferrer" target="_blank">Fredrik Hedblad</a> 。</p><h4 id="More"><a href="#More" class="headerlink" title="More"></a>More</h4><ul><li><a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ff700543(v=vs.85).aspx" rel="external nofollow noopener noreferrer" target="_blank">Extended Window Styles</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;WPF-与-WinForm-混用&quot;&gt;&lt;a href=&quot;#WPF-与-WinForm-混用&quot; class=&quot;headerlink&quot; title=&quot;WPF 与 WinForm 混用&quot;&gt;&lt;/a&gt;WPF 与 WinForm 混用&lt;/h2&gt;&lt;h3 id=&quot;AllowsTransparency-amp-WindowsFormsHost&quot;&gt;&lt;a href=&quot;#AllowsTransparency-amp-WindowsFormsHost&quot; class=&quot;headerlink&quot; title=&quot;AllowsTransparency &amp;amp; WindowsFormsHost&quot;&gt;&lt;/a&gt;AllowsTransparency &amp;amp; WindowsFormsHost&lt;/h3&gt;&lt;p&gt;WPF 启用窗体透明(&lt;code&gt;AllowsTransparency=&amp;quot;true&amp;quot;&lt;/code&gt;) 后， &lt;code&gt;WindowsFormsHost&lt;/code&gt; 的内容不可见。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="编程" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E7%A8%8B/"/>
    
      <category term=".Net" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E7%A8%8B/Net/"/>
    
    
      <category term="WPF" scheme="https://naturalwill.github.io/tags/WPF/"/>
    
  </entry>
  
  <entry>
    <title>关于 Runtime Error</title>
    <link href="https://naturalwill.github.io/2018/01/26/about-runtime-error/"/>
    <id>https://naturalwill.github.io/2018/01/26/about-runtime-error/</id>
    <published>2018-01-26T06:59:53.000Z</published>
    <updated>2020-01-11T08:47:31.210Z</updated>
    
    <content type="html"><![CDATA[<p>自己开发的程序遇到过几次 Runtime Error，用 Visual Studio 调试也完全无法捕获错误，一直以为是运行库有问题，后来发现程序里进行了<strong>错误的类型转换</strong>也可能会引起这个问题。</p><a id="more"></a><p><img src="/images/runtime-error.jpg" alt="Runtime Error"></p><blockquote><p>Microsoft Visual C++ Runtime Library</p><p>Runtime Error!</p><p>Program: C:\xxx\xxx.exe</p><p>This application has requested the Runtime to terminate it in an unusual way.<br>Please contact the application’s support team for more information.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自己开发的程序遇到过几次 Runtime Error，用 Visual Studio 调试也完全无法捕获错误，一直以为是运行库有问题，后来发现程序里进行了&lt;strong&gt;错误的类型转换&lt;/strong&gt;也可能会引起这个问题。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="编程" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="C/C++" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E7%A8%8B/C-C/"/>
    
    
      <category term="C/C++" scheme="https://naturalwill.github.io/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 16.04 禁用客人会话</title>
    <link href="https://naturalwill.github.io/2018/01/22/disable-guest-in-ubuntu-16-04/"/>
    <id>https://naturalwill.github.io/2018/01/22/disable-guest-in-ubuntu-16-04/</id>
    <published>2018-01-22T08:39:13.000Z</published>
    <updated>2020-01-11T08:47:31.206Z</updated>
    
    <content type="html"><![CDATA[<p>禁用Ubuntu 16.04 的访客模式，只需要修改配置文件 <code>/etc/lightdm/lightdm.conf.d/50-guest-wrapper.conf</code> 。</p><pre><code>sudo nano /etc/lightdm/lightdm.conf.d/50-guest-wrapper.conf</code></pre><p>在文件中添加以下内容即可。</p><pre><code>[Seat:*]allow-guest=false</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;禁用Ubuntu 16.04 的访客模式，只需要修改配置文件 &lt;code&gt;/etc/lightdm/lightdm.conf.d/50-guest-wrapper.conf&lt;/code&gt; 。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo nano /etc/lightdm/lig
      
    
    </summary>
    
      <category term="计算机" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="Linux" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/"/>
    
      <category term="Notes" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/Notes/"/>
    
    
      <category term="Notes" scheme="https://naturalwill.github.io/tags/Notes/"/>
    
      <category term="Ubuntu" scheme="https://naturalwill.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>使用 Nginx 转发时保留原始域名</title>
    <link href="https://naturalwill.github.io/2017/12/29/keep-the-Host-header-via-nginx-proxy-pass/"/>
    <id>https://naturalwill.github.io/2017/12/29/keep-the-Host-header-via-nginx-proxy-pass/</id>
    <published>2017-12-29T09:03:56.000Z</published>
    <updated>2020-01-11T08:47:31.189Z</updated>
    
    <content type="html"><![CDATA[<p>如果直接通过设置 proxy_pass 转发，会发现原来的域名会丢失，取代出现的是目标地址的 IP 。</p><pre><code>server {    listen 80;    location / {        proxy_pass http://127.0.0.1:4356;    }}</code></pre><p>解决方法是设置 proxy_set_header . 具体如下：</p><pre><code>server {    listen 80;    # this is the key !!!    proxy_set_header Host $host:$server_port;    location / {        proxy_pass http://127.0.0.1:4356;    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如果直接通过设置 proxy_pass 转发，会发现原来的域名会丢失，取代出现的是目标地址的 IP 。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server {
    listen 80;

    location / {
        proxy_pass http://12
      
    
    </summary>
    
      <category term="计算机" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="Linux" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/"/>
    
      <category term="Notes" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/Notes/"/>
    
    
      <category term="Nginx" scheme="https://naturalwill.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>如何将 RGB 数据保存为 BMP 图片？</title>
    <link href="https://naturalwill.github.io/2017/12/04/save-rgb-as-bmp/"/>
    <id>https://naturalwill.github.io/2017/12/04/save-rgb-as-bmp/</id>
    <published>2017-12-04T06:25:07.000Z</published>
    <updated>2020-01-11T08:47:31.171Z</updated>
    
    <content type="html"><![CDATA[<p>直接上代码，一个函数搞定。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SaveAsBMP</span><span class="params">(<span class="keyword">char</span> *filename, <span class="keyword">unsigned</span> <span class="keyword">char</span>* image, <span class="keyword">int</span> width, <span class="keyword">int</span> height, <span class="keyword">int</span> bpp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BITMAPFILEHEADER bmpheader;</span><br><span class="line">BITMAPINFOHEADER bmpinfo;</span><br><span class="line">FILE *fp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((fp = fopen(filename, <span class="string">"wb+"</span>)) == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"open file failed!\n"</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 4 Byte aligned</span></span><br><span class="line"><span class="keyword">int</span> stride = (((width * bpp) + <span class="number">31</span>) &gt;&gt; <span class="number">5</span>) &lt;&lt; <span class="number">2</span>;  <span class="comment">// (( BPP * Width ) / 32) * 4</span></span><br><span class="line"><span class="keyword">int</span> img_data_size = stride * height;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bmpheader.bfType = <span class="number">0x4d42</span>;</span><br><span class="line">bmpheader.bfReserved1 = <span class="number">0</span>;</span><br><span class="line">bmpheader.bfReserved2 = <span class="number">0</span>;</span><br><span class="line">bmpheader.bfOffBits = <span class="keyword">sizeof</span>(BITMAPFILEHEADER) + <span class="keyword">sizeof</span>(BITMAPINFOHEADER);</span><br><span class="line">bmpheader.bfSize = bmpheader.bfOffBits + img_data_size;</span><br><span class="line"></span><br><span class="line">bmpinfo.biSize = <span class="keyword">sizeof</span>(BITMAPINFOHEADER);</span><br><span class="line">bmpinfo.biWidth = width;</span><br><span class="line">bmpinfo.biHeight = height;</span><br><span class="line">bmpinfo.biPlanes = <span class="number">1</span>;</span><br><span class="line">bmpinfo.biBitCount = bpp;</span><br><span class="line">bmpinfo.biCompression = BI_RGB;</span><br><span class="line">bmpinfo.biSizeImage = img_data_size; <span class="comment">//  it can be 0 when biCompression is BI_RGB.</span></span><br><span class="line">bmpinfo.biXPelsPerMeter = <span class="number">3780</span>;  <span class="comment">// 96 * 39.370079 ~= 3780</span></span><br><span class="line">bmpinfo.biYPelsPerMeter = <span class="number">3780</span>;</span><br><span class="line">bmpinfo.biClrUsed = <span class="number">0</span>;</span><br><span class="line">bmpinfo.biClrImportant = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">fwrite(&amp;bmpheader, <span class="keyword">sizeof</span>(bmpheader), <span class="number">1</span>, fp);</span><br><span class="line">fwrite(&amp;bmpinfo, <span class="keyword">sizeof</span>(bmpinfo), <span class="number">1</span>, fp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> *buffer = <span class="keyword">new</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>[img_data_size];</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span>* pImage = image;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span>* pDest = buffer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> pixel_w_size = width * bpp / <span class="number">8</span>;</span><br><span class="line">pImage += pixel_w_size*(height - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; height; i++) &#123;</span><br><span class="line"><span class="built_in">memcpy</span>(pDest, pImage, pixel_w_size);</span><br><span class="line">pDest += stride;</span><br><span class="line"></span><br><span class="line"><span class="comment">//fwrite(pImage, pixel_w_size, 1, fp);</span></span><br><span class="line">pImage -= pixel_w_size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pImage = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line">fwrite(buffer, img_data_size, <span class="number">1</span>, fp);</span><br><span class="line">fclose(fp);</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span>[] buffer;</span><br><span class="line">buffer = <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p>BMP文件格式，又称为Bitmap（位图）或是DIB(Device-Independent Device，设备无关位图)，是Windows系统中广泛使用的图像文件格式。由于它可以不作任何变换地保存图像像素域的数据，因此成为我们取得RAW数据的重要来源。Windows的图形用户界面（graphical user interfaces）也在它的内建图像子系统GDI中对BMP格式提供了支持。</p><p>BMP文件的数据按照从文件头开始的先后顺序分为四个部分：</p><ul><li>bmp文件头(bmp file header)：提供文件的格式、大小等信息</li><li>位图信息头(bitmap information)：提供图像数据的尺寸、位平面数、压缩方式、颜色索引等信息</li><li>调色板(color palette)：可选，如使用索引来表示图像，调色板就是索引与其对应的颜色的映射表</li><li>位图数据(bitmap data)：就是图像数据啦^_^</li></ul><table><thead><tr><th>块名称</th><th>对应Windows结构体定义</th><th>大小（Byte）</th></tr></thead><tbody><tr><td>文件信息头</td><td>BITMAPFILEHEADER</td><td>14</td></tr><tr><td>位图信息头</td><td>BITMAPINFOHEADER</td><td>40</td></tr><tr><td>调色版</td><td></td><td>由颜色索引数决定</td></tr><tr><td>RGB颜色阵列</td><td>BYTE*</td><td>由图像长宽尺寸决定</td></tr></tbody></table><h3 id="BMP文件头（14字节）"><a href="#BMP文件头（14字节）" class="headerlink" title="BMP文件头（14字节）"></a>BMP文件头（14字节）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tagBITMAPFILEHEADER</span> &#123;</span></span><br><span class="line">  WORD  bfType;</span><br><span class="line">  DWORD bfSize;</span><br><span class="line">  WORD  bfReserved1;</span><br><span class="line">  WORD  bfReserved2;</span><br><span class="line">  DWORD bfOffBits;</span><br><span class="line">&#125; BITMAPFILEHEADER, *PBITMAPFILEHEADER;</span><br></pre></td></tr></table></figure><ul><li>bfType<br>The file type; must be BM. 即 0x4d42 </li><li>bfSize<br>The size, in bytes, of the bitmap file. 该位图文件的大小，用字节为单位</li><li>bfReserved1<br>Reserved; must be zero.</li><li>bfReserved2<br>Reserved; must be zero.</li><li>bfOffBits<br>The offset, in bytes, from the beginning of the BITMAPFILEHEADER structure to the bitmap bits.<br>从文件头开始到实际的图象数据之间的字节的偏移量。这个参数是非常有用的，因为位图信息头和调色板的长度会根据不同情况而变化，所以你可以用这个偏移值迅速的从文件中读取到位数据。</li></ul><h3 id="位图信息头（40字节）"><a href="#位图信息头（40字节）" class="headerlink" title="位图信息头（40字节）"></a>位图信息头（40字节）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tagBITMAPINFOHEADER</span> &#123;</span></span><br><span class="line">  DWORD biSize;</span><br><span class="line">  LONG  biWidth;</span><br><span class="line">  LONG  biHeight;</span><br><span class="line">  WORD  biPlanes;</span><br><span class="line">  WORD  biBitCount;</span><br><span class="line">  DWORD biCompression;</span><br><span class="line">  DWORD biSizeImage;</span><br><span class="line">  LONG  biXPelsPerMeter;</span><br><span class="line">  LONG  biYPelsPerMeter;</span><br><span class="line">  DWORD biClrUsed;</span><br><span class="line">  DWORD biClrImportant;</span><br><span class="line">&#125; BITMAPINFOHEADER, *PBITMAPINFOHEADER;</span><br></pre></td></tr></table></figure><ul><li>biSize<br>The number of bytes required by the structure.</li><li>biWidth<br>The width of the bitmap, in pixels.<br>If biCompression is <em>BI_JPEG</em> or <em>BI_PNG</em>, the biWidth member specifies the width of the decompressed JPEG or PNG image file, respectively.</li><li>biHeight<br>The height of the bitmap, in pixels. If biHeight is positive, the bitmap is a bottom-up DIB and its origin is the lower-left corner. If biHeight is negative, the bitmap is a top-down DIB and its origin is the upper-left corner.<br>If biHeight is negative, indicating a top-down DIB, biCompression must be either BI_RGB or BI_BITFIELDS. Top-down DIBs cannot be compressed.<br>If biCompression is <em>BI_JPEG</em> or <em>BI_PNG</em>, the biHeight member specifies the height of the decompressed JPEG or PNG image file, respectively.<br>说明图象的高度，以象素为单位。注：这个值除了用于描述图像的高度之外，它还有另一个用处，就是指明该图像是倒向的位图，还是正向的位图。<br>如果该值是一个正数，说明图像是倒向的，如果该值是一个负数，则说明图像是正向的。大多数的BMP文件都是倒向的位图，也就是时，高度值是一个正数。</li><li>biPlanes<br>The number of planes for the target device. This value must be set to 1.<br>为目标设备说明位面数，其值将总是被设为1。</li><li>biBitCount<br>The number of bits-per-pixel. The biBitCount member of the BITMAPINFOHEADER structure determines the number of bits that define each pixel and the maximum number of colors in the bitmap. This member must be one of the following values.<br>说明比特数/象素，其值为1、4、8、16、24、或32。但是由于我们平时用到的图像绝大部分是24位和32位的。</li><li>biCompression<br>The type of compression for a compressed bottom-up bitmap (top-down DIBs cannot be compressed). This member can be one of the following values.</li><li>biSizeImage<br>The size, in bytes, of the image. This may be set to zero for BI_RGB bitmaps.<br>If biCompression is BI_JPEG or BI_PNG, biSizeImage indicates the size of the JPEG or PNG image buffer, respectively.<br>说明图象的大小，以字节为单位。当用BI_RGB格式时，可设置为0。</li><li>biXPelsPerMeter<br>The horizontal resolution, in pixels-per-meter, of the target device for the bitmap. An application can use this value to select a bitmap from a resource group that best matches the characteristics of the current device.<br>说明水平分辨率，用象素/米表示。</li><li>biYPelsPerMeter<br>The vertical resolution, in pixels-per-meter, of the target device for the bitmap.</li><li>biClrUsed<br>The number of color indexes in the color table that are actually used by the bitmap. If this value is zero, the bitmap uses the maximum number of colors corresponding to the value of the biBitCount member for the compression mode specified by biCompression.<br>If biClrUsed is nonzero and the biBitCount member is less than 16, the biClrUsed member specifies the actual number of colors the graphics engine or device driver accesses. If biBitCount is 16 or greater, the biClrUsed member specifies the size of the color table used to optimize performance of the system color palettes. If biBitCount equals 16 or 32, the optimal color palette starts immediately following the three DWORD masks.<br>When the bitmap array immediately follows the BITMAPINFO structure, it is a packed bitmap. Packed bitmaps are referenced by a single pointer. Packed bitmaps require that the biClrUsed member must be either zero or the actual size of the color table.<br>说明位图实际使用的彩色表中的颜色索引数（设为0的话，则说明使用所有调色板项）。</li><li>biClrImportant<br>The number of color indexes that are required for displaying the bitmap. If this value is zero, all colors are required.<br>说明对图象显示有重要影响的颜色索引的数目，如果是0，表示都重要。</li></ul><h3 id="位图数据"><a href="#位图数据" class="headerlink" title="位图数据"></a>位图数据</h3><p>位图数据记录了位图的每一个像素值，记录顺序是在扫描行内是从左到右，扫描行之间是从下到上。</p><p>无论是磁盘上的位图文件还是内存中的位图图像，像素都由一组位（英语：bit）表示。</p><p>位图的一个像素值所占的字节数：</p><ul><li>每像素占1位（色深为1位，1bpp）的格式支持2种不同颜色。像素值直接对应一个位的值，最左像素对应第一个字节的最高位。使用该位的值用来对色表的索引：为0表示色表中的第一项，为1表示色表中的第二项（即最后一项）。</li><li>每像素占2位（色深为2位，2bpp）的格式支持4种不同颜色。每个字节对应4个像素，最左像素为最高的两位（仅在Windows CE中有效）。需要使用像素值来对一张含有4个颜色值的色表进行索引。</li><li>每像素占4位（色深为4位，4bpp）的格式支持16种不同的颜色。每个字节对应2个像素，最左像素为最高的四位。需要使用像素值来对一张含有16个颜色值的色表进行索引。</li><li>每像素占8位（色深为8位，8bpp）的格式支持256种不同的颜色。每个字节对应1个像素。需要使用像素值来对一张含有256个颜色值的色表进行索引。</li><li>每像素占16位（色深为16位，16bpp）的格式支持65536种不同的颜色，每2个字节（byte）对应一个像素。该像素的不透明度（英语：alpha）、红、绿、蓝采样值即存储在该2个字节中。</li><li>每像素占24位（色深为24位，24bpp）的格式支持16777216种不同的颜色，每3个字节对应一个像素。按顺序分别为B,G,R。</li><li>每像素占32位（色深为32位，32bpp）的格式支持4294967296种不同的颜色，每4个字节对应一个像素。按顺序分别为B,G,R,A。</li></ul><p>为了区分一个颜色值中的哪些位表示哪种采样值，DIB头给出了一套默认规则，同时也允许使用BITFIELDS将某组位指定为像素中的某个通道。</p><h3 id="对齐规则"><a href="#对齐规则" class="headerlink" title="对齐规则"></a>对齐规则</h3><p>由于Windows在进行行扫描的时候最小的单位为4个字节，如果数据对齐满足这个值的话对于数据的获取速度等都是有很大的增益的。<br>因此，BMP图像顺应了这个要求，要求每行的数据的长度必须是4的倍数，如果不够需要进行比特填充（以0填充），这样可以达到按行的快速存取。<br>这时，位图数据区的大小就未必是图片宽×每像素字节数×图片高能表示的了，因为每行可能还需要进行比特填充。</p><p>填充后的每行的字节数为：</p><pre><code>RowSize = 4 * (( BPP * Width ) / 32)</code></pre><p>其中BPP（Bits Per Pixel）为每像素的比特数。</p><p>在程序中，我们可以表示为：</p><pre><code>int stride = (((Width * BPP) + 31) &gt;&gt; 5) &lt;&lt; 2;</code></pre><p>注意： int 的除法。结果还是int，会舍掉小数点。所以，我们加上31，再除以32，就可以防止字节数变少。</p><p>这样，位图数据区的大小为：</p><pre><code>img_data_size = stride * Height;</code></pre><h2 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h2><ul><li><a href="https://www.cnblogs.com/Matrix_Yao/archive/2009/12/02/1615295.html" rel="external nofollow noopener noreferrer" target="_blank">BMP文件格式详解</a></li><li><a href="http://blog.csdn.net/yyfzy/article/details/785945" rel="external nofollow noopener noreferrer" target="_blank">位图文件（BMP）格式分析以及程序实现</a></li><li><a href="https://en.wikipedia.org/wiki/BMP_file_format" rel="external nofollow noopener noreferrer" target="_blank">BMP file format</a></li><li><a href="https://msdn.microsoft.com/query/dev15.query?appId=Dev15IDEF1&amp;l=ZH-CN&amp;k=k(WINGDI%2FBITMAPFILEHEADER);k(BITMAPFILEHEADER);k(DevLang-C%2B%2B);k(TargetOS-Windows)&amp;rd=true" rel="external nofollow noopener noreferrer" target="_blank">BITMAPFILEHEADER structure</a></li><li><a href="https://msdn.microsoft.com/query/dev15.query?appId=Dev15IDEF1&amp;l=ZH-CN&amp;k=k(WINGDI%2FBITMAPINFOHEADER);k(BITMAPINFOHEADER);k(DevLang-C%2B%2B);k(TargetOS-Windows)&amp;rd=true" rel="external nofollow noopener noreferrer" target="_blank">BITMAPINFOHEADER structure</a></li><li><a href="http://www.thethirdmedia.com/pc/200407/20040722117029.shtm" rel="external nofollow noopener noreferrer" target="_blank">BMP格式图像文件详析</a></li><li><a href="http://blog.csdn.net/oldmtn/article/details/46742555" rel="external nofollow noopener noreferrer" target="_blank">ffmpeg(7)：将h264编码的视频流保存为BMP或者JPEG图片</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;直接上代码，一个函数搞定。&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;tchar.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;SaveAsBMP&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *filename, &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* image, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; width, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; height, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; bpp)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	BITMAPFILEHEADER bmpheader;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	BITMAPINFOHEADER bmpinfo;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	FILE *fp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((fp = fopen(filename, &lt;span class=&quot;string&quot;&gt;&quot;wb+&quot;&lt;/span&gt;)) == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;open file failed!\n&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 4 Byte aligned&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; stride = (((width * bpp) + &lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;) &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;) &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// (( BPP * Width ) / 32) * 4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; img_data_size = stride * height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpheader.bfType = &lt;span class=&quot;number&quot;&gt;0x4d42&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpheader.bfReserved1 = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpheader.bfReserved2 = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpheader.bfOffBits = &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(BITMAPFILEHEADER) + &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(BITMAPINFOHEADER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpheader.bfSize = bmpheader.bfOffBits + img_data_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpinfo.biSize = &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(BITMAPINFOHEADER);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpinfo.biWidth = width;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpinfo.biHeight = height;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpinfo.biPlanes = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpinfo.biBitCount = bpp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpinfo.biCompression = BI_RGB;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpinfo.biSizeImage = img_data_size; &lt;span class=&quot;comment&quot;&gt;//  it can be 0 when biCompression is BI_RGB.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpinfo.biXPelsPerMeter = &lt;span class=&quot;number&quot;&gt;3780&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// 96 * 39.370079 ~= 3780&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpinfo.biYPelsPerMeter = &lt;span class=&quot;number&quot;&gt;3780&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpinfo.biClrUsed = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bmpinfo.biClrImportant = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fwrite(&amp;amp;bmpheader, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(bmpheader), &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fwrite(&amp;amp;bmpinfo, &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(bmpinfo), &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *buffer = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;[img_data_size];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* pImage = image;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;* pDest = buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; pixel_w_size = width * bpp / &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pImage += pixel_w_size*(height - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; height; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;memcpy&lt;/span&gt;(pDest, pImage, pixel_w_size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pDest += stride;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;comment&quot;&gt;//fwrite(pImage, pixel_w_size, 1, fp);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		pImage -= pixel_w_size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	pImage = &lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fwrite(buffer, img_data_size, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fclose(fp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;delete&lt;/span&gt;[] buffer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	buffer = &lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="计算机" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="编程" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="C/C++" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/%E7%BC%96%E7%A8%8B/C-C/"/>
    
    
      <category term="流媒体" scheme="https://naturalwill.github.io/tags/%E6%B5%81%E5%AA%92%E4%BD%93/"/>
    
      <category term="图像" scheme="https://naturalwill.github.io/tags/%E5%9B%BE%E5%83%8F/"/>
    
  </entry>
  
  <entry>
    <title>通过 Apt 为 Nginx 添加 RTMP 直播模块</title>
    <link href="https://naturalwill.github.io/2017/11/10/add-rtmp-module-to-nginx-full-with-apt/"/>
    <id>https://naturalwill.github.io/2017/11/10/add-rtmp-module-to-nginx-full-with-apt/</id>
    <published>2017-11-10T08:07:07.000Z</published>
    <updated>2020-01-11T08:47:31.166Z</updated>
    
    <content type="html"><![CDATA[<p>通过 apt 安装的 Nginx 可以通过系统服务的方式进行启动，相当便捷，但 Nginx 目前还不可以后期动态添加模块的，所以只能通过编译安装了。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>更新，及安装必要工具。</p><pre><code>sudo apt-get updatesudo apt-get install -y dpkg-dev</code></pre><p>创建一个干净的目录，用于后面的编译工作。</p><pre><code>mkdir build &amp;&amp; cd build</code></pre><p>获取 nginx 源码。执行以下代码后，会在当前目录将 nginx 的源码下载至 <em>nginx-*</em> , * 是版本号。</p><pre><code>apt-get source nginx</code></pre><p>获取 nginx-rtmp-module 源码。通过 git 获取，或者<a href="https://github.com/arut/nginx-rtmp-module/archive/master.zip" rel="external nofollow noopener noreferrer" target="_blank">直接下载</a>。</p><pre><code>git clone https://github.com/arut/nginx-rtmp-module.gitcd nginx-rtmp-modulegit checkout $(git describe --abbrev=0 --tags)</code></pre><a id="more"></a><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>进入  <em>nginx-*</em> 目录，修改 <code>debian/rules</code>, 找到 <code>full_configure_flags</code> 或 <code>config.status.full</code> 这一段，在最后增加一行 <code>--add-module=*</code>，其中 = 后是 nginx-rtmp-module 的路径，比如我的 nginx-rtmp-module 跟 nginx 一样都在 build 目录下，是这样的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--add-module=$(CURDIR)/../nginx-rtmp-module</span><br></pre></td></tr></table></figure><p>修改后的段落像是这样的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">full_configure_flags := \</span><br><span class="line">            $(common_configure_flags) \</span><br><span class="line">            --with-http_addition_module \</span><br><span class="line">            --with-http_dav_module \</span><br><span class="line">            --with-http_geoip_module \</span><br><span class="line">            --with-http_gunzip_module \</span><br><span class="line">            --with-http_gzip_static_module \</span><br><span class="line">            --with-http_image_filter_module \</span><br><span class="line">                        --with-http_v2_module \</span><br><span class="line">            --with-http_sub_module \</span><br><span class="line">            --with-http_xslt_module \</span><br><span class="line">            --with-stream \</span><br><span class="line">            --with-stream_ssl_module \</span><br><span class="line">            --with-mail \</span><br><span class="line">            --with-mail_ssl_module \</span><br><span class="line">            --with-threads \</span><br><span class="line">            --add-module=$(MODULESDIR)/nginx-auth-pam \</span><br><span class="line">            --add-module=$(MODULESDIR)/nginx-dav-ext-module \</span><br><span class="line">            --add-module=$(MODULESDIR)/nginx-echo \</span><br><span class="line">            --add-module=$(MODULESDIR)/nginx-upstream-fair \</span><br><span class="line">            --add-module=$(MODULESDIR)/ngx_http_substitutions_filter_module \</span><br><span class="line">            --add-module=$(CURDIR)/../nginx-rtmp-module</span><br></pre></td></tr></table></figure><p>或是这样的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">config.status.full: config.env.full</span><br><span class="line">        cd $(BUILDDIR_full) &amp;&amp; ./configure  \</span><br><span class="line">            $(common_configure_flags) \</span><br><span class="line">            --with-http_addition_module \</span><br><span class="line">            --with-http_dav_module \</span><br><span class="line">            --with-http_geoip_module \</span><br><span class="line">            --with-http_gzip_static_module \</span><br><span class="line">            --with-http_image_filter_module \</span><br><span class="line">            --with-http_spdy_module \</span><br><span class="line">            --with-http_sub_module \</span><br><span class="line">            --with-http_xslt_module \</span><br><span class="line">            --with-mail \</span><br><span class="line">            --with-mail_ssl_module \</span><br><span class="line">            --add-module=$(MODULESDIR)/nginx-auth-pam \</span><br><span class="line">            --add-module=$(MODULESDIR)/nginx-dav-ext-module \</span><br><span class="line">            --add-module=$(MODULESDIR)/nginx-echo \</span><br><span class="line">            --add-module=$(MODULESDIR)/nginx-upstream-fair \</span><br><span class="line">            --add-module=$(MODULESDIR)/ngx_http_substitutions_filter_module \</span><br><span class="line">            --add-module=$(CURDIR)/../nginx-rtmp-module \</span><br><span class="line">            &gt;$@</span><br><span class="line">        touch $@</span><br></pre></td></tr></table></figure><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><pre><code>sudo apt-get build-dep nginx</code></pre><h2 id="构建"><a href="#构建" class="headerlink" title="构建"></a>构建</h2><pre><code>dpkg-buildpackage -b</code></pre><p>之后，会在 nginx 的上级目录，也就是 build 目录下，生成一堆 deb 软件包。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>接下来就可以直接安装了。</p><pre><code>sudo dpkg -i nginx-common_*.deb nginx-full_*.deb</code></pre><h2 id="后期工作"><a href="#后期工作" class="headerlink" title="后期工作"></a>后期工作</h2><p>在运行 <code>apt upgrade</code> 的时候，忽略 nginx-common 与 nginx-full 。</p><pre><code>sudo apt-mark hold nginx-common nginx-full</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过 apt 安装的 Nginx 可以通过系统服务的方式进行启动，相当便捷，但 Nginx 目前还不可以后期动态添加模块的，所以只能通过编译安装了。&lt;/p&gt;
&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;p&gt;更新，及安装必要工具。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install -y dpkg-dev
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;创建一个干净的目录，用于后面的编译工作。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir build &amp;amp;&amp;amp; cd build
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;获取 nginx 源码。执行以下代码后，会在当前目录将 nginx 的源码下载至 &lt;em&gt;nginx-*&lt;/em&gt; , * 是版本号。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get source nginx
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;获取 nginx-rtmp-module 源码。通过 git 获取，或者&lt;a href=&quot;https://github.com/arut/nginx-rtmp-module/archive/master.zip&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;直接下载&lt;/a&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/arut/nginx-rtmp-module.git
cd nginx-rtmp-module
git checkout $(git describe --abbrev=0 --tags)
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="计算机" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="Linux" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/"/>
    
      <category term="部署" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/Linux/%E9%83%A8%E7%BD%B2/"/>
    
    
      <category term="Linux" scheme="https://naturalwill.github.io/tags/Linux/"/>
    
      <category term="Nginx" scheme="https://naturalwill.github.io/tags/Nginx/"/>
    
      <category term="流媒体" scheme="https://naturalwill.github.io/tags/%E6%B5%81%E5%AA%92%E4%BD%93/"/>
    
      <category term="RTMP" scheme="https://naturalwill.github.io/tags/RTMP/"/>
    
  </entry>
  
  <entry>
    <title>在 Windows 10 2017秋季更新后 WSL 替换 Ubuntu 为 Archlinux</title>
    <link href="https://naturalwill.github.io/2017/11/05/install-archlinux-on-wsl/"/>
    <id>https://naturalwill.github.io/2017/11/05/install-archlinux-on-wsl/</id>
    <published>2017-11-04T17:20:47.000Z</published>
    <updated>2020-01-11T08:47:31.161Z</updated>
    
    <content type="html"><![CDATA[<p>从Windows商店安装Ubuntu。</p><p>从开始菜单打开 Ubuntu。</p><p>通过 cmd 切换默认用户为 root:</p><pre><code>&gt; ubuntu config --default-user root</code></pre><p>重新打开 Ubuntu。</p><p>从 <a href="https://www.archlinux.org/download/" rel="external nofollow noopener noreferrer" target="_blank">Arch Linux Downloads</a>或镜像站 下载一个 archlinux-bootstrap.tar.gz, 并解压：</p><pre><code># wget https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/2018.05.01/archlinux-bootstrap-2018.05.01-x86_64.tar.gz# tar -zxvf archlinux-bootstrap-2018.05.01-x86_64.tar.gz</code></pre><p>修改 <code>~/root.x86_64/etc/pacman.d/mirrorlist</code>, 选择需要的服务器，取消注释。</p><p>让WSL自动生成 /etc/resolv.conf:</p><pre><code># echo &quot;# This file was automatically generated by WSL. To stop automatic generation of this file, remove this line.&quot; &gt; ~/root.x86_64/etc/resolv.conf</code></pre><p>退出所有 Ubuntu Shell, 在资源管理器中打开 <code>%localappdata%\Packages</code>, 并找到 <code>CanonicalGroupLimited.UbuntuonWindows_</code> 开头的文件夹，删除 <code>%localappdata%\Packages\CanonicalGroupLimited.UbuntuonWindows_*\LocalState\rootfs</code> 中的 bin, etc, lib, lib64, sbin, srv, usr 和 var 等 8 个文件夹。</p><p>然后，<strong>移动</strong> <code>rootfs\root\root.x86_64</code> 中的 bin, etc, lib, lib64, sbin, srv, usr 和 var 到 <code>rootfs</code> 中。</p><p><del>在另一个 Arch Linux 系统中构建 <a href="https://aur.archlinux.org/packages/fakeroot-tcp/" rel="external nofollow noopener noreferrer" target="_blank">fakeroot-tcp<sup>AUR</sup></a> 和 <a href="https://aur.archlinux.org/packages/glibc-wsl/" rel="external nofollow noopener noreferrer" target="_blank">glibc-wsl<sup>AUR</sup></a> , 然后复制到你的 Windows 电脑。 （通过 <code>--nocheck</code> 选项可以在 <code>makepkg</code> 编译 glibc-wsl 时跳过一个非常耗时的测试套件） <em>glibc-wsl</em> 用于解决 <a href="https://github.com/Microsoft/BashOnWindows/issues/1878" rel="external nofollow noopener noreferrer" target="_blank">这个bug</a>。 而直到 System V IPC 被完全实现之前 <em>fakeroot-tcp</em> 都是必需的。 (<a href="https://github.com/Microsoft/BashOnWindows/issues/1016" rel="external nofollow noopener noreferrer" target="_blank">详情</a>)</del></p><p>在另一个 Arch Linux 系统中构建 <a href="https://aur.archlinux.org/packages/fakeroot-tcp/" rel="external nofollow noopener noreferrer" target="_blank">fakeroot-tcp<sup>AUR</sup></a> , 然后复制到你的 Windows 电脑。直到 System V IPC 被完全实现之前 <em>fakeroot-tcp</em> 都是必需的。 (<a href="https://github.com/Microsoft/BashOnWindows/issues/1016" rel="external nofollow noopener noreferrer" target="_blank">详情</a>)</p><p>重新打开 Bash 以安装 Archlinux:</p><pre><code># pacman-key --init# pacman-key --populate archlinux# pacman -Syy# pacman -U fakeroot-tcp-1.22-2-x86_64.pkg.tar.xz# pacman -Syu base base-devel</code></pre><p>注意：在安装 base 和 base-devel 时，需要取消 <del>glibc 和</del> fakeroot 。</p><p>最后，增加一个普通账号。</p><pre><code># useradd -m -G wheel -s /bin/bash username# passwd root# passwd username</code></pre><p>并通过 cmd 设置该账号为默认账号：</p><pre><code>&gt; ubuntu config --default-user username</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;从Windows商店安装Ubuntu。&lt;/p&gt;
&lt;p&gt;从开始菜单打开 Ubuntu。&lt;/p&gt;
&lt;p&gt;通过 cmd 切换默认用户为 root:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; ubuntu config --default-user root
&lt;/code&gt;&lt;/pre
      
    
    </summary>
    
      <category term="计算机" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
      <category term="Windows" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/Windows/"/>
    
      <category term="WSL" scheme="https://naturalwill.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/Windows/WSL/"/>
    
    
      <category term="WSL" scheme="https://naturalwill.github.io/tags/WSL/"/>
    
      <category term="Archlinux" scheme="https://naturalwill.github.io/tags/Archlinux/"/>
    
  </entry>
  
</feed>
